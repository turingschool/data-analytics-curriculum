I"&
<h3 id="understand-the-problem">Understand the problem</h3>
<p>Demonstrate the problem before going into the solution. Have students work through the <a href="http://tutorials.jumpstartlab.com/topics/performance/caching_data.html">Caching Data Tutorial</a></p>

<p>Stop at <code class="highlighter-rouge">Using Rails.cache</code> heading.</p>

<p>Why is this approach limited?
Answer questions.</p>

<h3 id="explain-how-we-will-solve">Explain how we will solve</h3>
<p>Where key/value stores fall in the big picture:</p>
<ul>
  <li>Rails app</li>
  <li>Relational DB
    <ul>
      <li>Postgres, Sqlite</li>
    </ul>
  </li>
  <li>NoSQL options (<em>brief</em> overview of other NoSQL options as a refresher)
    <ul>
      <li>Document DBs (MongoDB)
        <ul>
          <li>Store complex data-structure with key-value pairs or sub-documents within them
            <ul>
              <li>XML, JSON, BSON</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Graph Stores (Neo4j)
        <ul>
          <li>Store information on networks.</li>
          <li>Social connections (Recommendations on friends or who to follow)</li>
        </ul>
      </li>
      <li>Wide-Column Stores (Cassandra)
        <ul>
          <li>Optimized for big data applications</li>
          <li>doesn’t use rows</li>
        </ul>
      </li>
      <li>Key-Value Stores
        <ul>
          <li>Simplest NoSQL DBs</li>
          <li>Riak, Amazon Dynamo(supports document and key value), Redis</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Why we choose Redis for a solution and a general explanation of what a key/value store is
    <ul>
      <li>Because it’s <em>FAST</em>!</li>
    </ul>
  </li>
</ul>

<h3 id="implement-the-solution">Implement the solution</h3>
<p>Work from Rails.cache until Explicit Cache Expiration
After completed, demonstrate the following:</p>
<ul>
  <li>Clear the cache</li>
  <li>Check the cache from redis-cli so they can see it disappearing
    <ul>
      <li>Reload the web page</li>
      <li>How can we prevent the lag for the initial page load?
        <ul>
          <li>Background workers as a possible solution</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>When is the info that we cached invalid?
    <ul>
      <li>Whenever a new article or comment is added</li>
    </ul>
  </li>
</ul>

<p>Finish the tutorial starting from Explicit Cache Expiration</p>
<ul>
  <li>This lesson to be followed up by <a href="http://tutorials.jumpstartlab.com/topics/performance/digest_based_caching.html">key/digest based caching</a></li>
</ul>
:ET