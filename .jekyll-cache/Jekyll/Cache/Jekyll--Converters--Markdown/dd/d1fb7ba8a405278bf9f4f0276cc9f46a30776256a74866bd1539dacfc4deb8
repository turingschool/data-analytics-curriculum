I"<p>Writing your own blogging engine is almost a right of passage for aspiring web developers. In this project you’ll build a “Static Site Generator” – a system that allows the author to write content in a writing-friendly format (like Markdown), then the system generates HTML and puts it all together. For reference, existing systems that do this include <a href="https://jekyllrb.com/">Jekyll</a>, <a href="https://middlemanapp.com/">Middleman</a>, and many others.</p>

<h2 id="project-overview">Project Overview</h2>

<h3 id="learning-goals">Learning Goals</h3>

<ul>
  <li>Use tests to drive both the design and implementation of code</li>
  <li>Decompose a large application into components</li>
  <li>Use test fixtures instead of actual data when testing</li>
  <li>Connect related objects together through references</li>
  <li>Learn an agile approach to building software</li>
</ul>

<h3 id="getting-started">Getting Started</h3>

<ol>
  <li>One team member forks the repository at https://github.com/turingschool-examples/hyde and adds the other(s) as collaborators.</li>
  <li>Everyone on the team clones the repository</li>
  <li>Setup <a href="https://github.com/colszowka/simplecov">SimpleCov</a> to monitor test coverage along the way</li>
</ol>

<h2 id="key-concepts">Key Concepts</h2>

<p>From a technical perspective, this project will emphasize:</p>

<ul>
  <li>File I/O</li>
  <li>Parsing and Markup</li>
  <li>Encapsulating Responsibilities</li>
  <li>Light data / analytics</li>
</ul>

<h2 id="evaluation-rubric">Evaluation Rubric</h2>

<p>Available <a href="rubric">here</a>.</p>

<h2 id="code-sanitation">Code Sanitation</h2>

<p>To help give us a more automated approach to evaluating code cleanliness in the project, the template includes the <a href="https://github.com/square/cane">Cane</a> and <a href="https://github.com/troessner/reek">Reek</a> gems. These tools will analyze your codebase and print out warnings for common problems like:</p>

<ul>
  <li>Long methods</li>
  <li>Long lines</li>
  <li>Too many branches</li>
</ul>

<p>To run the sanitation checker, use this command (from the root of your project):</p>

<p><code class="highlighter-rouge">$ rake sanitation:all</code></p>

<h2 id="project-iterations-and-base-expectations">Project Iterations and Base Expectations</h2>

<p>Because the requirements for this project are lengthy and complex, we’ve broken
them into Iterations in their own files:</p>

<ul>
  <li><a href="iteration_0">Iteration 0</a> - Generating a new Hyde project</li>
  <li><a href="iteration_1">Iteration 1</a> - Building Hyde source files into HTML</li>
  <li><a href="iteration_2">Iteration 2</a> - Generating new blog post files</li>
  <li><a href="iteration_3">Iteration 3</a> - Customizing site design with layouts and CSS</li>
  <li><a href="iteration_4">Iteration 4</a> - Supporting post “tags”</li>
  <li><a href="iteration_5">Iteration 5</a> - Supporting features #1</li>
  <li><a href="iteration_6">Iteration 6</a> - Supporting features #2</li>
</ul>

<h3 id="possible-supporting-features">Possible Supporting Features</h3>

<ul>
  <li>Partials</li>
  <li>CSS preprocessor (using sass or less)</li>
  <li>Gem extraction</li>
  <li>Include a dev server for serving built files</li>
  <li>FS Event Watcher to rebuild automatically on file change</li>
</ul>
:ET