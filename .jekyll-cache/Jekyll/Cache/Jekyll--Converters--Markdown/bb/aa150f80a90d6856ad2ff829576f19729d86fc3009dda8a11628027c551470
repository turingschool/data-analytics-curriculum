I":<h2 id="choose-your-own-adventure-intro-to-git">Choose Your Own Adventure Intro to Git</h2>

<p>Today, we’re going to introduce <strong><a href="https://git-scm.com/">git</a></strong>, a distributed
version control system popular with many software developers.</p>

<p>Git is a large system with a lot of specialized features,
but for now we’d like to focus on 2 things:</p>

<ol>
  <li>Developing a basic conceptual model of how git works</li>
  <li>Developing a practical, easy-to-execute workflow for using
git on a day-to-day basis</li>
</ol>

<h4 id="goals">Goals</h4>

<p>Students should be able to:</p>

<ul>
  <li>explain the purpose of Git</li>
  <li>initialize a new git repository</li>
  <li>add files to git staging area</li>
  <li>commit files and directories</li>
  <li>check the status of the working directory and staging area and interpret the output</li>
  <li>create and checkout a new branch</li>
  <li>switch between branches</li>
  <li>merge local branches to local master</li>
  <li>explain the purpose of Github</li>
  <li>clone a repository from Github</li>
  <li>create a remote on Github</li>
  <li>push a repository to Github from the command line</li>
</ul>

<h2 id="getting-started---gits-conceptual-model-90-mins">Getting Started - Git’s Conceptual Model (90 mins)</h2>

<p>First, let’s spend <strong>90 minutes</strong> getting some overview and background
on Git, as well as some introductory hands-on practice.
Choose <strong>one of the following</strong> independent activities to work on.</p>

<h4 id="level-1---drills-and-guided-practice-video--exercises">Level 1 - Drills and Guided Practice (Video + Exercises)</h4>

<p>Ease in with Code School’s free <a href="https://www.codeschool.com/courses/git-real">Git Real Course</a>.
This contains some good introductory videos as well as some guided
challenges to give you some practice with the basic git commands.</p>

<p>Try to get through level 3. You may be able to get farther if you
work quickly.</p>

<h4 id="level-2---intermediate-overview-and-command-line-practice">Level 2 - Intermediate Overview and Command-Line Practice</h4>

<p>Scott Chacon’s book <a href="https://git-scm.com/book/en/v2">Pro Git</a> is available
free on the Git website. This book is a little denser but still gives
a great introduction to both the concepts behind git and its basic practical
application.</p>

<p>Read and work through the examples in the following sections:</p>

<ul>
  <li><a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control">1.1 - Intro</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git">1.2 - Short History</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Getting-Started-Git-Basics">1.3 - Git Basics</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup">1.6 - Setup</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository">2.1 - Creating a Repository</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository">2.2 - Recording Changes</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History">2.3 - Viewing History</a></li>
  <li><a href="https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes">2.5 - Working with Remotes</a></li>
</ul>

<p>Strive to complete at least through section 2.2.</p>

<h4 id="level-3---conceptual-deep-dive-and-discussion-video">Level 3 - Conceptual Deep Dive and Discussion (Video)</h4>

<p><a href="https://pragprog.com/screencast/v-jwsceasy/source-control-made-easy">Source Control Made Easy with Jim Weirich</a></p>

<p>If you like working with deeper conceptual understandings, or if you already have
some experience with git, this video by Jim Weirich gives a fascinating look
at the conceptual underpinnings behind git.</p>

<p>The video approaches git from the perspective of trying to build a hypothetical
Version Control System (VCS) and discussing many of the issues and concepts involved.</p>

<p>(Turing owns a copy of the video which we will screen for the class)</p>

<h2 id="next-steps--practical-git-workflows-90-mins">Next Steps – Practical Git Workflows (90 mins)</h2>

<p>Now that we have some conceptual understandings and a bit of practice under our
belts, lets talk about a practical workflow that we can apply to our own projects.</p>

<p>We’ll pick up with the <a href="https://github.com/turingschool/lesson_plans/blob/master/ruby_01-object_oriented_programming_with_ruby/intro_to_git.markdown#a-basic-git-workflow">Basic Git Workflow</a>
section of this lesson plan.</p>
:ET