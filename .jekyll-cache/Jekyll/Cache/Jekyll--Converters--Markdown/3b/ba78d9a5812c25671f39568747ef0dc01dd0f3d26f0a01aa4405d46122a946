I"!<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Students are able to use classes and methods to make abstractions that improve code quality</li>
  <li>Students are able to write classes that demonstrate encapsulation of data</li>
  <li>Students are able to explain how their code achieves abstraction and encapsulation</li>
</ul>

<h2 id="part-1-solo-research-10-minutes">Part 1: Solo Research (10 minutes)</h2>

<p>Research the following questions:</p>

<ol>
  <li>What is Abstraction?</li>
  <li>What is Encapsulation?</li>
</ol>

<h2 id="part-2-group-chart-paper-20-minutes">Part 2: Group Chart Paper (20 minutes)</h2>

<p>As a group, create a chart paper with the following:</p>

<ol>
  <li>What is Abstraction?</li>
  <li>Explain abstraction using a metaphor.</li>
  <li>What is Encapsulation?</li>
  <li>Explain encapsulation using a metaphor.</li>
</ol>

<h2 id="part-3-paired-coding-30-minutes">Part 3: Paired Coding (30 minutes)</h2>

<ol>
  <li>Clone down <a href="https://github.com/turingschool-examples/driving_simulator">Driving Simulator</a>.</li>
  <li>With your partner, discuss some of the additions suggested in the README. <strong>Note:</strong> you should not actually implement the additions right now. Simply talk through them.</li>
  <li>Discuss the questions in the README.</li>
  <li>Finally, take some time to refactor the existing code.</li>
</ol>

<h2 id="checks-for-understanding">Checks for Understanding</h2>

<ul>
  <li>What is Abstraction? Why is it important?</li>
  <li>What is Encapsulation? Why is it important?</li>
</ul>
:ET