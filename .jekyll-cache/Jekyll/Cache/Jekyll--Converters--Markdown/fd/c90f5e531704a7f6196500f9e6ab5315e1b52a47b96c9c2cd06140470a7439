I"å&<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Students can refactor an existing vanilla JS application to use React</li>
  <li>Students can use Axios in their React applications</li>
</ul>

<h2 id="integrating-react-with-existing-client-application">Integrating React with Existing Client Application</h2>

<h3 id="installing-modules">Installing Modules</h3>

<p><a href="https://facebook.github.io/react/docs/installation.html">Per the React docs</a>, weâ€™ll need a few things:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># within root of project directory</span>
npm <span class="nb">install</span> <span class="nt">--save</span> react react-dom
npm <span class="nb">install</span> <span class="nt">--save-dev</span> babel-cli babel-preset-react babel-preset-es2015
<span class="nb">echo</span> <span class="s1">'{ "presets": ["react", "es2015"] }'</span> <span class="o">&gt;</span> .babelrc
</code></pre></div></div>

<h3 id="project-integration">Project Integration</h3>

<p>Hop into your projectâ€™s <code class="highlighter-rouge">index.js</code> and add your React imports:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// index.js</span>
<span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">ReactDOM</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-dom</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<p>Assuming there is a <code class="highlighter-rouge">#root</code> element in your markup:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span><span class="p">,</span> <span class="nx">world</span><span class="o">!&lt;</span><span class="sr">/h1&gt;, document.getElementById</span><span class="se">(</span><span class="sr">'root'</span><span class="se">)</span><span class="err">)
</span></code></pre></div></div>

<p>Navigate to your page in the browser - voilÃ !</p>

<p>Youâ€™re ready to start searching down elements of your UI to transform into components.</p>

<h3 id="components">Components</h3>

<p>The easiest place to start with components would be to find an element of your UI that could almost be plucked out and put back into place. Think buttons, avatars, feeds, comments, etc.</p>

<p>Imagine your markup including a list of food / calorie information:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"food-row"</span> <span class="na">data=</span><span class="s">id=`${food.id}`</span><span class="nt">&gt;</span>
  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"food-name"</span><span class="nt">&gt;</span>${food.name}<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"food-calories"</span><span class="nt">&gt;</span>${food.calories}<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/li&gt;</span>
</code></pre></div></div>

<p>As a React component, that would look something like:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Food.js</span>
<span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react</span><span class="dl">"</span>

<span class="kd">class</span> <span class="nx">Food</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">li</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">food-row</span><span class="dl">"</span> <span class="nx">data</span><span class="o">=</span><span class="nx">id</span><span class="o">=</span><span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">food</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">p</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">food-name</span><span class="dl">"</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">p</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">food-calories</span><span class="dl">"</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">calories</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>    <span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">Food</span>
</code></pre></div></div>

<p>Great! Youâ€™re set to continue transforming UI elements into components.</p>

<h2 id="why-axios">Why Axios?</h2>

<p><a href="https://github.com/mzabriskie/axios">Axios</a> is a promise-based library used with Node.js and your browser to make asynchronous JavaScript HTTP requests.</p>

<p>When we know we need to implement promise-based asynchronous HTTP requests with JavaScript we usually assume jQueryâ€™s AJAX is what weâ€™ll need to get the job done.</p>

<p>While we <em>could</em> add jQuery to our React application, weâ€™d sort of be going against React by doing so. Remember, jQuery is a wonderful tool for DOM manipulation, but React doesnâ€™t care much about the DOM. Since React is handling everything within its own virtual DOM, thereâ€™s really no longer a need for jQuery.</p>

<p>Thus, Axios becomes a lighter-weight solution to handle our HTTP requests.</p>

<h3 id="installing-axios">Installing Axios</h3>

<p>Fiirst letâ€™s install Axios.</p>

<p>Simple.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># within project directory</span>
npm <span class="nb">install </span>axios <span class="nt">--save</span>
</code></pre></div></div>

<h3 id="working-with-axios">Working with Axios</h3>

<p>Working with Axios? Also simple. We already know jQueryâ€™s AJAX syntax â€“ Axios really isnâ€™t much different.</p>

<p>For example, if we wanted to make a GET request to our APIâ€™s <code class="highlighter-rouge">foods</code> route, itâ€™d look something like this:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">axios</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">axios</span><span class="dl">'</span>

<span class="nx">axios</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://quantified-api.herokuapp.com/v1/foods</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">foods</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">foods</span><span class="p">)</span>
  <span class="p">})</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
  <span class="p">})</span>
</code></pre></div></div>

<p>What about a POST request? Also similar.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">axios</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://quantified-api.herokuapp.com/v1/foods</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Tofu</span><span class="dl">"</span>
  <span class="na">calories</span><span class="p">:</span> <span class="mi">120</span>
<span class="p">})</span>
</code></pre></div></div>

<p>Go as far as you can both creating components and whittling away at the need for jQuery altogether.</p>

<p>Congrats - youâ€™ve got a transformed React app!</p>

<h2 id="related-resources">Related Resources</h2>

<ul>
  <li><a href="https://facebook.github.io/react/docs/installation.html">Add React to an Existing Application</a></li>
  <li><a href="https://github.com/mzabriskie/axios">Axios Docs</a></li>
</ul>
:ET