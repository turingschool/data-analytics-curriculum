I"XS<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Generate and customize Rails Serializers</li>
  <li>Understand what constitutes presentation logic in the context of serving a JSON API and why formatting in the model is not the right place</li>
</ul>

<h2 id="warmup">Warmup</h2>

<p>On your own, research serializers. In your notebook, write down the answers to these questions:</p>

<ul>
  <li>What do serializers allow us to do?</li>
  <li>What resources were you able to find? Which seem most promising?</li>
  <li>What search terms did you use that gave the best results?</li>
</ul>

<h2 id="serializers">Serializers</h2>

<p>Serializers allow us to break from the concept of views fully with our API, and instead, mold that data in an object-oriented fashion. We don’t have views to do our dirty work for us anymore, so we rely on serializers in order to present to whomever is consuming our API what we want them to see.</p>

<p>When we call <code class="highlighter-rouge">render json:</code>, Rails makes a call to <code class="highlighter-rouge">as_json</code> under the hood unless we have a serializer set up. Eventually, <code class="highlighter-rouge">as_json</code> calls <code class="highlighter-rouge">to_json</code> and our response is generated.</p>

<p>With how we’ve used <code class="highlighter-rouge">render json:</code> up til now, all data related with the resources in our database is sent back to the client as-is.</p>

<p>Let’s imagine that you don’t just want the raw guts of your model converted to JSON and sent out to the user – maybe you want to customize what you send back.</p>

<h2 id="specifications-for-json-response">Specifications for JSON response</h2>

<p>Let’s use the <a href="https://jsonapi.org/">json:api</a> specification for our JSON responses. Take a minute to familiarize yourself with the documentation.</p>

<ul>
  <li>What is the root <code class="highlighter-rouge">key</code>?</li>
  <li>How are the attributes formatted for a resource in a response?</li>
  <li>How are a resource’s relationships formatted?</li>
</ul>

<h2 id="exercise">Exercise</h2>

<h3 id="adding-to-our-existing-project">Adding to Our Existing Project</h3>

<p>You may have created a repo to code-along with the building and API video last Thursday during evals. Feel free to use the repository that you created. Otherwise, you can clone <a href="https://github.com/turingschool-examples/building-apis">this</a> repo. Below are instructions for getting started from scratch.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/turingschool-examples/building-apis.git
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout complete-building-api-exercise
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>rake db:create
</code></pre></div></div>

<p>We want to work with objects that have related models, so let’s add a <code class="highlighter-rouge">Store</code> model:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails g model store name
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails g model store_book store:references book:references book_price:integer quantity:integer
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>rake db:migrate
</code></pre></div></div>

<p>Add relationships to your models:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># in book.rb</span>
<span class="n">has_many</span> <span class="ss">:store_books</span>
<span class="n">has_many</span> <span class="ss">:stores</span><span class="p">,</span> <span class="ss">through: :store_books</span>

<span class="c1"># in stores.rb</span>
<span class="n">has_many</span> <span class="ss">:store_books</span>
<span class="n">has_many</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">through: :store_books</span>
</code></pre></div></div>

<p>And whip together a quick seed file:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#in seeds.rb</span>
<span class="mi">20</span><span class="p">.</span><span class="nf">times</span> <span class="k">do</span>
  <span class="no">Book</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span>
    <span class="ss">title: </span><span class="no">Faker</span><span class="o">::</span><span class="no">Book</span><span class="p">.</span><span class="nf">title</span><span class="p">,</span>
    <span class="ss">author: </span><span class="no">Faker</span><span class="o">::</span><span class="no">Book</span><span class="p">.</span><span class="nf">author</span><span class="p">,</span>
    <span class="ss">genre: </span><span class="no">Faker</span><span class="o">::</span><span class="no">Book</span><span class="p">.</span><span class="nf">genre</span><span class="p">,</span>
    <span class="ss">summary: </span><span class="no">Faker</span><span class="o">::</span><span class="no">Lorem</span><span class="p">.</span><span class="nf">paragraph</span><span class="p">,</span>
    <span class="ss">number_sold: </span><span class="no">Faker</span><span class="o">::</span><span class="no">Number</span><span class="p">.</span><span class="nf">within</span><span class="p">(</span><span class="ss">range: </span><span class="mi">1</span><span class="o">..</span><span class="mi">10</span><span class="p">)</span>
  <span class="p">)</span>
<span class="k">end</span>

<span class="mi">5</span><span class="p">.</span><span class="nf">times</span> <span class="k">do</span>
  <span class="no">Store</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span>
    <span class="ss">name: </span><span class="no">Faker</span><span class="o">::</span><span class="no">Company</span><span class="p">.</span><span class="nf">name</span>
  <span class="p">)</span>
<span class="k">end</span>

<span class="n">books</span> <span class="o">=</span> <span class="no">Book</span><span class="p">.</span><span class="nf">all</span>

<span class="n">books</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">book</span><span class="o">|</span>
  <span class="n">store_id_1</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">5</span><span class="p">)</span>
  <span class="n">store_id_2</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">5</span><span class="p">)</span>

  <span class="no">StoreBook</span><span class="p">.</span><span class="nf">create!</span><span class="p">([</span>
      <span class="p">{</span>
        <span class="ss">book_id: </span><span class="n">book</span><span class="p">.</span><span class="nf">id</span><span class="p">,</span>
        <span class="ss">store_id: </span><span class="n">store_id_1</span><span class="p">,</span>
        <span class="ss">book_price: </span><span class="nb">rand</span><span class="p">(</span><span class="mi">100</span><span class="o">..</span><span class="mi">10000</span><span class="p">),</span>
        <span class="ss">quantity: </span><span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">10</span><span class="p">)</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="ss">book_id: </span><span class="n">book</span><span class="p">.</span><span class="nf">id</span><span class="p">,</span>
        <span class="ss">store_id: </span><span class="n">store_id_2</span><span class="p">,</span>
        <span class="ss">book_price: </span><span class="nb">rand</span><span class="p">(</span><span class="mi">100</span><span class="o">..</span><span class="mi">10000</span><span class="p">),</span>
        <span class="ss">quantity: </span><span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">10</span><span class="p">)</span>
      <span class="p">}</span>
    <span class="p">])</span>
<span class="k">end</span>
</code></pre></div></div>

<p>And seed</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:seed</span>
</code></pre></div></div>

<p>Create the store controller and routes:</p>

<ul>
  <li>touch <code class="highlighter-rouge">controllers/api/v1/stores_controller.rb</code></li>
  <li>add controller setup for index and show</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># stores_controller</span>
<span class="k">class</span> <span class="nc">Api::V1::StoresController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>
<ul>
  <li>Add the routes to our routes file
    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">namespace</span> <span class="ss">:api</span> <span class="k">do</span>
  <span class="n">namespace</span> <span class="ss">:v1</span> <span class="k">do</span>
<span class="n">resources</span> <span class="ss">:books</span>
<span class="n">resources</span> <span class="ss">:stores</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:show</span><span class="p">]</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div>    </div>
  </li>
  <li>Set <code class="highlighter-rouge">index</code> and <code class="highlighter-rouge">show</code> methods to render appropriate json.</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># stores_controller</span>
<span class="k">class</span> <span class="nc">Api::V1::StoresController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
    <span class="no">Store</span><span class="p">.</span><span class="nf">all</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="no">Store</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<h3 id="responses">Responses</h3>

<p>Use Postman to view the current responses that your API is providing to the routes listed below:</p>

<ul>
  <li>api/v1/stores</li>
  <li>api/v1/stores/:id</li>
</ul>

<p>So we have our responses from our server, but it isn’t JSON API 1.0 And it has this created at and updated at stuff which we don’t want. So what do we do? We need to use a serializer.</p>

<h3 id="customizing-json">Customizing JSON</h3>

<ol>
  <li>Create a Store Serializer and try to build out a hash that will look like this <strong>without</strong> using a gem:
    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="s2">"data"</span><span class="p">:</span> <span class="p">[</span>
 <span class="p">{</span>
   <span class="s2">"id"</span><span class="p">:</span> <span class="s2">"1"</span><span class="p">,</span>
   <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"store"</span><span class="p">,</span>
   <span class="s2">"attributes"</span><span class="p">:</span> <span class="p">{</span>
     <span class="s2">"id"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
     <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Toy, Steuber and Schinner"</span><span class="p">,</span>
     <span class="s2">"num_books"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>
     <span class="s2">"active"</span><span class="p">:</span> <span class="kp">true</span>
   <span class="p">},</span>
   <span class="s2">"relationships"</span><span class="p">:</span> <span class="p">{</span>
     <span class="s2">"books"</span><span class="p">:</span> <span class="p">{</span>
       <span class="s2">"data"</span><span class="p">:</span> <span class="p">[</span>
         <span class="p">{</span>
           <span class="s2">"id"</span><span class="p">:</span> <span class="s2">"1"</span><span class="p">,</span>
           <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"book"</span>
         <span class="p">},</span>
         <span class="p">{</span>
           <span class="s2">"id"</span><span class="p">:</span> <span class="s2">"4"</span><span class="p">,</span>
           <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"book"</span>
         <span class="p">}</span>
       <span class="p">]</span>
     <span class="p">}</span>
   <span class="p">}</span>
 <span class="p">}</span>
  <span class="p">]</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="using-fastjsonapi-to-modify-as_json">Using FastJSONAPI to modify <code class="highlighter-rouge">as_json</code></h3>

<p>Add this line to your Gemfile.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem 'fast_jsonapi'
</code></pre></div></div>

<p>And then <code class="highlighter-rouge">bundle install</code></p>

<p>We can now use the built in generator in order to make ourselves a serializer.</p>

<p><code class="highlighter-rouge">rails g serializer Store id name</code></p>

<p>This will add the appropriate attributes from the  Store model.  And give us only the id and store name.</p>

<p>Let’s check out what is in the Serializer.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">StoreSerializer</span>
  <span class="kp">include</span> <span class="no">FastJsonapi</span><span class="o">::</span><span class="no">ObjectSerializer</span>
  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span>
<span class="k">end</span>
</code></pre></div></div>

<p>So now we have this serializer, and we need to modify our controller.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Api::V1::OrdersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
    <span class="n">render</span> <span class="ss">json: </span><span class="no">StoreSerializer</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="no">Store</span><span class="p">.</span><span class="nf">all</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="n">render</span> <span class="ss">json: </span><span class="no">StoreSerializer</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="no">Store</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">]))</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>So what we are doing is instead of rendering the ActiveRecord stuff in json, we are sending it to the serializer, where the stuff gets serialized, and then that gets rendered as json.</p>

<p>But what if we wanted to show some awesome relationship action?</p>

<p>Easy.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">StoreSerializer</span>
  <span class="kp">include</span> <span class="no">FastJsonapi</span><span class="o">::</span><span class="no">ObjectSerializer</span>
  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span>

  <span class="n">has_many</span> <span class="ss">:books</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Add that to your serializer and refresh.</p>

<p>What if we wanted a custom attribute? We can do so using this format.</p>

<p>Let’s say we wanted an attribute with the number of books.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">StoreSerializer</span>
  <span class="kp">include</span> <span class="no">FastJsonapi</span><span class="o">::</span><span class="no">ObjectSerializer</span>
  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span>

  <span class="n">has_many</span> <span class="ss">:books</span>

  <span class="n">attribute</span> <span class="ss">:num_books</span> <span class="k">do</span> <span class="o">|</span><span class="n">object</span><span class="o">|</span>
    <span class="n">object</span><span class="p">.</span><span class="nf">books</span><span class="p">.</span><span class="nf">count</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>This syntax is a bit different from what we are used to. We use <code class="highlighter-rouge">attribute</code> singular, and then as a symbol we pick the name of what we want our attribute to be. We use a do end block similar to an enumerable with a block parameter. Now the block parameter, <code class="highlighter-rouge">object</code> is a lot like self. We get to use it for each single thing of a collection we pass to the serializer. We are essentially saying for each thing you serialize, grab the books and count them too. In this manner we can add a custom generated value for each book.</p>

<p>We can also have a custom static attribute like so:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">StoreSerializer</span>
  <span class="kp">include</span> <span class="no">FastJsonapi</span><span class="o">::</span><span class="no">ObjectSerializer</span>
  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span>

  <span class="n">has_many</span> <span class="ss">:books</span>

  <span class="n">attribute</span> <span class="ss">:num_books</span> <span class="k">do</span> <span class="o">|</span><span class="n">object</span><span class="o">|</span>
    <span class="n">object</span><span class="p">.</span><span class="nf">books</span><span class="p">.</span><span class="nf">count</span>
  <span class="k">end</span>

  <span class="n">attribute</span> <span class="ss">:active</span> <span class="k">do</span>
    <span class="kp">true</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<h2 id="extra-practice">Extra Practice</h2>

<p>Do what we did to <code class="highlighter-rouge">Stores</code>, but for <code class="highlighter-rouge">Books</code> now.</p>

<ul>
  <li>Some existing fields
    <ul>
      <li><code class="highlighter-rouge">id</code>, <code class="highlighter-rouge">title</code>, <code class="highlighter-rouge">author</code>, <code class="highlighter-rouge">genre</code>, <code class="highlighter-rouge">summary</code>, <code class="highlighter-rouge">num_sold</code></li>
    </ul>
  </li>
  <li>Some custom fields
    <ul>
      <li><code class="highlighter-rouge">num_stores</code></li>
    </ul>
  </li>
  <li>A relationship
    <ul>
      <li><code class="highlighter-rouge">stores</code></li>
    </ul>
  </li>
</ul>

<h2 id="additional-resources">Additional Resources</h2>

<ul>
  <li><a href="https://github.com/rails/jbuilder">Jbuilder</a></li>
  <li><a href="https://github.com/Netflix/fast_jsonapi">fast_jsonapi</a></li>
  <li><a href="https://github.com/Netflix/fast_jsonapi/pull/152">Nested Includes with fast_jsonapi</a></li>
</ul>
:ET