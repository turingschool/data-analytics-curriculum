I"h<h2 id="practice-paired-assessment">Practice Paired Assessment</h2>

<ul>
  <li><a href="https://github.com/turingschool-examples/pets_and_customers">Pets and Customers</a></li>
</ul>

<h2 id="practice-independent-challenges">Practice Independent Challenges</h2>

<p><strong>Week 2</strong></p>

<p>The week 2 challenge is an intro to Object Oriented Programming. It will require students to build two classes that interact, as well as use an enumerable.</p>

<p>Example: <a href="https://github.com/turingschool-examples/potluck">Potluck</a></p>

<p><strong>Week 3</strong></p>

<p>The week 3 challenge will require students to build three classes that interact. It will also involve a more complex enumeration problem that can’t be solved with a single enumerable. Students will also need to access a Hash.</p>

<p>Example: <a href="https://github.com/turingschool-examples/world_cup">World Cup</a></p>

<p><strong>Week 4</strong></p>

<p>The week 4 challenge will involve three classes with only partial specifications. Students must think algorithmically to build an Object Oriented solution that solves the problem. Students will also be required to build a hash.</p>

<p>Example: <a href="https://github.com/turingschool-examples/boat_rental">Boat Rental</a>
Example: <a href="https://github.com/turingschool-examples/colorado_lottery_2003">Colorado Lottery</a></p>

<p><strong>Weeks 5 and 6</strong></p>

<p>The week 5 and 6 challenges are a test of a student’s knowledge of OOP and Ruby mechanics. They will involve two or three classes that interact, iterating over a hash, and several methods that can’t be built with a single enumerable.</p>

<p>The week 5 challenge will be a practice for the final in week 6.</p>

<p>Example: <a href="https://github.com/turingschool-examples/reunion">Reunion</a>
Example: <a href="https://github.com/turingschool-examples/museo">Museo</a></p>
:ET