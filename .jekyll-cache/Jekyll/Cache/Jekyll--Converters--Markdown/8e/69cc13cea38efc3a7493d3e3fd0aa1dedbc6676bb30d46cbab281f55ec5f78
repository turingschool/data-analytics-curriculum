I"ê<p>When designing a service or an API, you need a machine-readable way to transmit data. Typically, machine-readable formats have been just that‚Äîmachine-readable (Think zeros and ones).</p>

<p>At its core, JSON is an agreed upon format to represent data. It strikes a balance between being machine-readable, but also human-readable. It is frequently used as a language-neutral means to transmit data on the web.</p>

<p>Because it‚Äôs also more lightweight than XML (read: fewer characters) it‚Äôs typically faster because it requires less bandwidth to transmit.</p>

<p>Other notes:</p>

<ul>
  <li>JSON stands for ‚ÄúJavaScript Object Notation‚Äù</li>
  <li>It is sent as one really long string in the body of the HTTP response</li>
  <li>It maps easily onto primitives (integers, strings, booleans, nulls, etc) and data structures (hashes/maps and arrays) used by most programming languages</li>
  <li>It looks and acts similarly to Ruby‚Äôs hash syntax
    <ul>
      <li>except it will contain <code class="highlighter-rouge">null</code> instead of <code class="highlighter-rouge">nil</code> ‚Äì watch out for this!</li>
    </ul>
  </li>
  <li>It‚Äôs lightweight and easy for humans to read and write</li>
  <li>Most programming languages have built-in libraries for reading and writing JSON structures</li>
  <li>It‚Äôs a subset of the object syntax in JavaScript. All JSON is valid JavaScript, but not all JavaScript objects are valid JSON (functions, non-string keys, etc.)</li>
  <li>When working in Ruby we will rarely work with JSON directly
    <ul>
      <li>we‚Äôll parse incoming JSON data as a hash, and access the elements of the hash as we have in our previous work, or</li>
      <li>we‚Äôll build a hash or object, and ‚Äúserialize‚Äù that as JSON for sending a response</li>
    </ul>
  </li>
</ul>

<h2 id="json-rules">JSON Rules</h2>

<p>JSON data structures are typically string representations of either a single JavaScript object (similar to a Ruby hash) or an array of objects or other values.</p>

<ul>
  <li>Objects are made up of name/value pairs</li>
  <li>Keys must be double-quoted and followed by a colon</li>
</ul>

<p>You also have a few types of values available in a JSON structure:</p>

<ul>
  <li>Numbers</li>
  <li>Strings (in double quotes only)</li>
  <li>Booleans (<code class="highlighter-rouge">true</code> and <code class="highlighter-rouge">false</code>)</li>
  <li>Arrays</li>
  <li>Objects (again, objects in JavaScript are similar to hashes in Ruby)</li>
  <li><code class="highlighter-rouge">null</code></li>
</ul>

<h2 id="common-mistakes">Common Mistakes</h2>

<ul>
  <li>Using single quotes instead of double quotes</li>
  <li>Not using quotes at all (JavaScript doesn‚Äôt require quotes on keys nor does Ruby‚Äôs symbol shorthand)</li>
  <li>Including a trailing comma in an array</li>
  <li>Trying to break a string over multiple lines (<code class="highlighter-rouge">\n</code> is fine)</li>
</ul>
:ET