I"Z
<h2 id="intro-5-minutes">Intro (5 minutes)</h2>

<p>As you learned to build more complex applications, we gave you Rails. As a framework, one of Rails’ jobs is to help you organize your code. Logic that is related to a resource belongs in that resource’s model. Logic related to a view belongs in a helper.</p>

<p>This doesn’t just help you organize your files – it helps you organize divide responsibilities in your code.</p>

<p>JavaScript is not just a new language, but a new environment and we’ve taken away any opinionated framework from you. Now, the responsibility division and code organization is completely your responsibility.</p>

<h2 id="learning-goals">Learning Goals</h2>

<p>By the end of this workshop, you should be able to:</p>

<ul>
  <li>Understand Murphy’s Four Areas of Responsibility</li>
  <li>Come up with a file structure to organize your client-side JS</li>
</ul>

<h2 id="testable-javascript-and-how-it-relates-to-code-organization-20-minutes">Testable Javascript and How it Relates to Code Organization (20 minutes)</h2>

<p>Although the following reading is focused on unit testing JavaScript, Murphy does a great job of describing separation of responsibilities.</p>

<p>Reading: <a href="https://alistapart.com/article/writing-testable-javascript">Writing Testable JavaScript</a></p>

<p>After 15 minutes, turn to the person next to you and compare/discuss interesting parts of the reading.</p>

<h3 id="murphys-four-areas-of-responsibility">Murphy’s Four Areas of Responsibility</h3>

<ul>
  <li>Presentation and interaction</li>
  <li>Data management and persistence</li>
  <li>Overall application state</li>
  <li>Setup and glue code to make the pieces work together</li>
</ul>

<h2 id="activity-10-minutes">Activity (10 minutes)</h2>

<p>Pair up with your QS partner. With the Four Areas of Responsibility in mind along with projects specs, come up with a file structure you could use to organize your project. Be prepared to show this to the class.</p>

<h2 id="review-20-minute">Review (20 minute)</h2>

<p>Have each group show the file structures they have come up with.</p>
<ul>
  <li>Compare and contrast.</li>
  <li>What are some similarities we are seeing?</li>
  <li>What are some differences?</li>
  <li>Should we all be using similar structures? What does that look like?</li>
</ul>

<h2 id="interview-question">Interview Question</h2>

<p>You’re building the front-end for an weather app in vanilla JavaScript. It displays the current temperature, 10-hour and 7-day forecasts, and has a search bar where the user can change the location. What might your file structure look like?</p>
:ET