I"p<h3 id="visualize-your-git-workflow">Visualize Your Git Workflow</h3>

<p>Let’s spend some time diagramming and visualizing our git workflows. Break into groups of about 4. Everyone should have paper and markers. Together let’s diagram a strait forward git workflow.</p>

<ol>
  <li>You create a project <code class="highlighter-rouge">git init</code></li>
  <li>You do work and stage &amp; commit along the way <code class="highlighter-rouge">git add path_to/file_name</code> &amp; <code class="highlighter-rouge">git commit -m "add x feature"</code></li>
  <li>That work is then eventually merged in the master branch</li>
  <li>You checkout a new feature branch <code class="highlighter-rouge">git branch -b new_feature_A</code></li>
  <li>You do work, stage &amp; commit along the way <code class="highlighter-rouge">git add path_to/file_name</code> &amp; <code class="highlighter-rouge">git commit -m "add x feature"</code></li>
  <li>Team member checkouts a new feature branch <code class="highlighter-rouge">git branch -b new_feature_Z</code></li>
  <li>Team member does work, stage &amp; commit along the way <code class="highlighter-rouge">git add path_to/file_name</code> &amp; <code class="highlighter-rouge">git commit -m "add x feature"</code></li>
  <li>Team member finishes feature, work is approved and merged to master</li>
  <li>Once master is updated, update your local version of master <code class="highlighter-rouge">git checkout master</code> &amp; <code class="highlighter-rouge">git pull remote_name master</code></li>
  <li>Update your feature branch to stay current with master <code class="highlighter-rouge">git checkout feature_branch_A</code> &amp; <code class="highlighter-rouge">git merge master</code>.</li>
  <li>Repeat</li>
</ol>

<h3 id="some-helpful-git-tools">Some helpful git tools:</h3>

<ul>
  <li><code class="highlighter-rouge">git branch -a</code> - show all branches on the git repository</li>
  <li><code class="highlighter-rouge">git fetch</code> - gets the code from your remote repositories and pulls it into the remote branch tracking on your machine. This command does not add the changes pulled from the remote into your local version.</li>
  <li><code class="highlighter-rouge">git merge</code> - merges one branch/history into another. <code class="highlighter-rouge">git merge branch_name</code> will merge the branch named <code class="highlighter-rouge">branch_name</code> onto the local branch you are on.</li>
  <li><code class="highlighter-rouge">git checkout -b feature_branch_name</code> - checks out a new branch under the name <code class="highlighter-rouge">feature_branch_name</code></li>
  <li><code class="highlighter-rouge">git checkout branch_name</code> - checks out an existing branch under the name <code class="highlighter-rouge">branch_name</code></li>
  <li><code class="highlighter-rouge">git log</code>
    <ul>
      <li><code class="highlighter-rouge">git log --oneline</code></li>
      <li><code class="highlighter-rouge">git log --author=Name</code></li>
      <li><code class="highlighter-rouge">git log --graph</code></li>
      <li>many more options for git log
*</li>
    </ul>
  </li>
</ul>
:ET