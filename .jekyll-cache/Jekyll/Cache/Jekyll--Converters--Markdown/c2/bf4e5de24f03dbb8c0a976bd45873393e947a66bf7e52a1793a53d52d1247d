I"µ<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Explain why SASS is a better option than raw CSS</li>
  <li>Be able to set up SASS in a Rails project</li>
  <li>Understand how to create variables in SASS</li>
  <li>Understand how to nest elements in SASS</li>
  <li>Understand how to nest properties in SASS</li>
</ul>

<h2 id="vocabulary">Vocabulary</h2>

<ul>
  <li>SASS</li>
  <li><code class="highlighter-rouge">.scss</code></li>
  <li>Variables in SASS</li>
  <li>Nesting Elements</li>
  <li>Nesting Properties</li>
</ul>

<h2 id="css-selector-refresh---warmup">CSS Selector Refresh - WarmUp</h2>

<ul>
  <li>How do you target an id in CSS?</li>
  <li>How do you target a class in CSS?</li>
  <li>How do you target an <code class="highlighter-rouge">&lt;h1&gt;</code> inside of a <code class="highlighter-rouge">&lt;div class="container"&gt;</code>?</li>
</ul>

<h2 id="what-is-sass">What is SASS?</h2>

<p>Syntactically Awesome StyleSheets! An extension of CSS that allows us to use raw CSS syntax while also mixing in variables, functions, and modularity where we please. It is a style sheet language that get compiled or interpreted as CSS. Plain CSS is valid SASS. It is coded in Ruby :boom:!</p>

<h3 id="why-tho">WHY THO??</h3>

<p>SASS has a lot of awesome features that help organize our CSS files. Letâ€™s explore some of those features.</p>

<p>We are going to work in <code class="highlighter-rouge">movie_mania</code> for this exercise.</p>

<p>First, letâ€™s get some data in our database.</p>

<p>Copy <a href="https://docs.google.com/spreadsheets/d/1z3riNNOpyVMOEeqjOEma5tq2xr7S8DysHYgbw0057sg/edit?usp=sharing">this</a> spreadsheet and put it in the <code class="highlighter-rouge">movie_mania</code> project under <code class="highlighter-rouge">data/movies.csv</code>. Letâ€™s also merge in the <code class="highlighter-rouge">seed</code> branch that has the code to import the <code class="highlighter-rouge">movies.csv</code>. Run <code class="highlighter-rouge">rake db:seed</code> to seed the database with movies.</p>

<p>We are going to be working in <code class="highlighter-rouge">view/movies/index.html.erb</code></p>

<h2 id="scss-setup-in-rails">SCSS Setup in Rails</h2>

<p><a href="https://github.com/rails/sass-rails"><code class="highlighter-rouge">sass-rails</code></a> ships with Rails 5 projects. If you need to add it manually:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Gemfile</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span>
</code></pre></div></div>

<p>This should provide for you an <code class="highlighter-rouge">application.scss</code> within <code class="highlighter-rouge">app/assets/stylesheets</code> or you will want to change the name of the <code class="highlighter-rouge">application.css</code> file to <code class="highlighter-rouge">application.scss</code></p>

<p>Lets also create a <code class="highlighter-rouge">custom.scss</code> file to write our new code in.</p>

<p>But where in our app are the stylesheets even linked?!?</p>

<p>Check out the file <code class="highlighter-rouge">app/views/application.html.erb</code> to see where we are linking the stylesheets and how (hint: itâ€™s a rails helper!)</p>

<h2 id="variables-in-sass">Variables in SASS</h2>

<p>Variables in SASS are declared with a <code class="highlighter-rouge">$</code> and are assigned with a colon <code class="highlighter-rouge">:</code></p>

<p><img src="../misc/images/colorpalette.png" alt="color palette" /></p>

<p>We have chosen a color palette for our app, letâ€™s create some variables with those hex codes. Our app is pretty small right now so keeping track of colors is simple but imagine as our app grows and we have to continually look back for our hex codes. By creating variables, we can easily access these colors at any point.</p>

<pre><code class="language-Sass">$light-purple: #6369D1;
$ice-blue: #60E1E0;
$grayish: #D8D2E1;
$light-brown: #B88E8D;
$dark-navy: #34435E;
</code></pre>
<p>Lets go ahead and set all text color of all our <code class="highlighter-rouge">&lt;h1&gt;</code>â€™s to <code class="highlighter-rouge">$light-brown</code> and our <code class="highlighter-rouge">&lt;h2&gt;</code> to <code class="highlighter-rouge">$dark-navy</code></p>

<pre><code class="language-SASS">  h1 {
    color: $light-brown;
  }

  h2 {
    color: $dark-navy;
  }
</code></pre>

<p>What if we just want the <code class="highlighter-rouge">&lt;h1&gt;</code> on the <code class="highlighter-rouge">movies#index</code> to be <code class="highlighter-rouge">$light-brown</code> but other <code class="highlighter-rouge">h1</code>â€™s to be <code class="highlighter-rouge">$light-purple</code>?</p>

<h2 id="nesting---elements">Nesting - Elements</h2>

<p>First, letâ€™s add some structure to our <code class="highlighter-rouge">index</code>.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"movie-index"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h1&gt;</span>All Movies<span class="nt">&lt;/h1&gt;</span>
  <span class="nt">&lt;</span><span class="err">%</span> <span class="err">@</span><span class="na">movies.each</span> <span class="na">do</span> <span class="err">|</span><span class="na">movie</span><span class="err">|</span> <span class="err">%</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h2&gt;&lt;</span><span class="err">%=</span> <span class="na">movie.title</span> <span class="err">%</span><span class="nt">&gt;&lt;/h2&gt;</span>
    <span class="nt">&lt;p&gt;&lt;</span><span class="err">%=</span> <span class="na">movie.description</span> <span class="err">%</span><span class="nt">&gt;&lt;/p&gt;</span>
  <span class="nt">&lt;</span><span class="err">%</span> <span class="na">end</span> <span class="err">%</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>Then we can NEST our html elements. This provides more readable code and an actual STRUCTURE for our CSS. FINALLY!!!</p>

<pre><code class="language-SASS">  h1 {
    color: $light-brown;
  }

  .movie-index {
    h1 {
      color: $light-purple;
    }
  }
</code></pre>

<p>Run <code class="highlighter-rouge">rails s</code> and visit the route <code class="highlighter-rouge">/movies</code> to see the CSS. Inspect the CSS and see that it compiles as we expect to see CSS code! COOL!</p>

<p>On your own: Create a variable that holds a <code class="highlighter-rouge">$grayish</code> 3px dotted border and add it to both the <code class="highlighter-rouge">&lt;p&gt;</code> tag and the <code class="highlighter-rouge">&lt;h2&gt;</code>.</p>

<h2 id="nesting---properties">Nesting - Properties</h2>

<p>Another great benefit of SASS is that we can nest our properties for more clarification and organization.</p>

<p>Letâ€™s center our <code class="highlighter-rouge">&lt;h2&gt;</code> and underline the text.</p>

<pre><code class="language-SASS">  .movie-index {
    h2 {
      text: {
        align: center;
        decoration: underline;
      }
    }
  }
</code></pre>

<p>On your own, add a font family of <code class="highlighter-rouge">papyrus</code> and a size of 15px to the <code class="highlighter-rouge">&lt;p&gt;</code> tag under <code class="highlighter-rouge">.movie-index</code></p>

<h2 id="wrap-up-questions">Wrap Up Questions</h2>

<ul>
  <li>What does SASS stand for?</li>
  <li>Why is SASS a better option than CSS?</li>
  <li>How is a variable declared and assigned in SASS?</li>
  <li>Why is nesting a benefit? Both at an element and property level?</li>
</ul>

<h3 id="resources">Resources</h3>

<ul>
  <li>Read the <a href="http://sass-lang.com/guide">Sass docs</a> :D</li>
</ul>
:ET