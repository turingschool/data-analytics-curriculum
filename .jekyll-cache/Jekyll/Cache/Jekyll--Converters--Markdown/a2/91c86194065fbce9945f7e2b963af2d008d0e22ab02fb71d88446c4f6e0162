I"~¿<h3 id="iterations">Iterations:</h3>

<ul>
  <li><a href="1_getting_started.markdown">1 Getting Started</a></li>
  <li><a href="2_implementing_artists.markdown">2 Implementing artists</a></li>
  <li><a href="3_implementing_songs.markdown">3 Implementing songs</a></li>
  <li><a href="3_optional_additional_song_features.markdown">3.1 Optional Additional Song Features</a></li>
  <li><a href="4_implementing_playlists.markdown">4 Implementing Playlists</a></li>
  <li><a href="5_refactoring.markdown">5 Refactoring</a></li>
  <li><a href="6_controller_tests.markdown">6 Controller Tests</a></li>
  <li><a href="7_implementing_users.markdown">7 Implementing users</a></li>
  <li><a href="wip-image-upload.markdown">7.1 Extensions</a></li>
</ul>

<p>If you messed up everything doing the optional additional features (or things get messed up going into the next section), remember that you can always go back to master (your last working state) and check out a branch from there.</p>

<p>The instructions for this part will build onto the end of <code class="highlighter-rouge">3_implementing-songs</code> and assume that you did not implement additional song features. If you built the additional functionality and merged it into master, you will be fine. Just keep your eye out for the few places that might be different.</p>

<p>Artists, check. Songs, check. Now let‚Äôs implement <code class="highlighter-rouge">playlists</code>. First, check out a new branch:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git checkout -b 4_implement-playlists
</code></pre></div></div>

<p>We‚Äôre tracking songs and artists. How do we create playlists? Not sure. Let‚Äôs write a user story and have the test drive out this behavior.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>As a user
Given that songs and artists exist in the database
When I visit the playlists path
And I click "New playlist"
And I fill in a name
And I select the songs for the playlist
And I click "Create Playlist"
Then I see the playlist title
And I see the titles of all songs in that playlist
And the titles should link to the individual song pages
</code></pre></div></div>

<p>Create a spec file: <code class="highlighter-rouge">$ touch spec/features/user_creates_a_playlist_spec.rb</code>. Inside of that file, let‚Äôs write the test:</p>

<p><strong>If you want more of a challenge, stop right here and create this test on your own.</strong></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rails_helper'</span>

<span class="no">RSpec</span><span class="p">.</span><span class="nf">feature</span> <span class="s2">"User creates a playlist"</span> <span class="k">do</span>
  <span class="n">scenario</span> <span class="s2">"they see the page for the individual playlist"</span> <span class="k">do</span>
    <span class="n">song_one</span><span class="p">,</span> <span class="n">song_two</span><span class="p">,</span> <span class="n">song_three</span> <span class="o">=</span> <span class="n">create_list</span><span class="p">(</span><span class="ss">:song</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

    <span class="n">playlist_name</span> <span class="o">=</span> <span class="s2">"My Jams"</span>

    <span class="n">visit</span> <span class="n">playlists_path</span>
    <span class="n">click_on</span> <span class="s2">"New playlist"</span>
    <span class="n">fill_in</span> <span class="s2">"playlist_name"</span><span class="p">,</span> <span class="ss">with: </span><span class="n">playlist_name</span>
    <span class="n">check</span><span class="p">(</span><span class="s2">"song-</span><span class="si">#{</span><span class="n">song_one</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
    <span class="n">check</span><span class="p">(</span><span class="s2">"song-</span><span class="si">#{</span><span class="n">song_three</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
    <span class="n">click_on</span> <span class="s2">"Create Playlist"</span>

    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">).</span><span class="nf">to</span> <span class="n">have_content</span> <span class="n">playlist_name</span>

    <span class="n">within</span><span class="p">(</span><span class="s2">"li:first"</span><span class="p">)</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">).</span><span class="nf">to</span> <span class="n">have_link</span> <span class="n">song_one</span><span class="p">.</span><span class="nf">title</span><span class="p">,</span> <span class="ss">href: </span><span class="n">song_path</span><span class="p">(</span><span class="n">song_one</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">within</span><span class="p">(</span><span class="s2">"li:last"</span><span class="p">)</span> <span class="k">do</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">).</span><span class="nf">to</span> <span class="n">have_link</span> <span class="n">song_three</span><span class="p">.</span><span class="nf">title</span><span class="p">,</span> <span class="ss">href: </span><span class="n">song_path</span><span class="p">(</span><span class="n">song_three</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Notice that we‚Äôre using <code class="highlighter-rouge">create_list(:song, 3)</code> which is a FactoryGirl method. When we generated the <code class="highlighter-rouge">Song</code> model, it also created a factory in <code class="highlighter-rouge">spec/factories/songs.rb</code>. It‚Äôs good practice to have all of your factories separated if you have a lot of them, but we don‚Äôt right now. Let‚Äôs delete this file and define a song factory in <code class="highlighter-rouge">spec/support/factories.rb</code>. Notice that the first factory for <code class="highlighter-rouge">artist</code> is one we previously defined.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">FactoryGirl</span><span class="p">.</span><span class="nf">define</span> <span class="k">do</span>
  <span class="n">factory</span> <span class="ss">:artist</span> <span class="k">do</span>
    <span class="nb">name</span>       <span class="s2">"Bob Marley"</span>
    <span class="n">image_path</span> <span class="s2">"http://cps-static.rovicorp.com/3/JPG_400/MI0003/146/MI0003146038.jpg"</span>
  <span class="k">end</span>

  <span class="n">sequence</span> <span class="ss">:title</span><span class="p">,</span> <span class="p">[</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">].</span><span class="nf">cycle</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
    <span class="s2">"</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2"> Title"</span>
  <span class="k">end</span>

  <span class="n">factory</span> <span class="ss">:song</span> <span class="k">do</span>
    <span class="n">title</span>
    <span class="n">artist</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Here, I defined a song factory, and I also defined a sequence for title. Learn more about <a href="https://github.com/thoughtbot/factory_girl/blob/master/GETTING_STARTED.md#sequences">FactoryGirl Sequences</a> and <a href="http://www.pmamediagroup.com/2009/05/smarter-sequencing-in-factory-girl/">custom sequences</a>.</p>

<p>Run the spec again:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Finished in 0.05686 seconds (files took 3.5 seconds to load)
0 examples, 0 failures

/usr/local/rvm/gems/ruby-2.2.2/gems/factory_girl-4.5.0/lib/factory_girl/linter.rb:14:in `lint!': The following factories are invalid: (FactoryGirl::InvalidFactoryError)

* song - Validation failed: Name has already been taken (ActiveRecord::RecordInvalid)
  from /usr/local/rvm/gems/ruby-2.2.2/gems/factory_girl-4.5.0/lib/factory_girl/linter.rb:4:in `lint!'
     ...
</code></pre></div></div>

<p>Hmm. Oopsies. The <a href="">FactoryGirl Linter</a> caught an issue with one of our factories. We‚Äôve hardcoded ‚ÄúBob Marley‚Äù as the name in the artist factory, but now it‚Äôs trying to generate an artist with each song, and we can‚Äôt have duplicated names (per our uniqueness validation). That‚Äôs ok. We‚Äôre agile. We can roll with changes.</p>

<p>Let‚Äôs change up our factories:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">FactoryGirl</span><span class="p">.</span><span class="nf">define</span> <span class="k">do</span>
  <span class="n">factory</span> <span class="ss">:artist</span> <span class="k">do</span>
    <span class="nb">name</span>
    <span class="n">image_path</span> <span class="s2">"http://cps-static.rovicorp.com/3/JPG_400/MI0003/146/MI0003146038.jpg"</span>
  <span class="k">end</span>

  <span class="n">sequence</span> <span class="ss">:name</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
    <span class="s2">"</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2"> Artist"</span>
  <span class="k">end</span>

  <span class="n">sequence</span> <span class="ss">:title</span><span class="p">,</span> <span class="p">[</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">].</span><span class="nf">cycle</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
    <span class="s2">"</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2"> Title"</span>
  <span class="k">end</span>

  <span class="n">factory</span> <span class="ss">:song</span> <span class="k">do</span>
    <span class="n">title</span>
    <span class="n">artist</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Here, we‚Äôve created a new sequence for an artist name. This will make a dynamic new name for each artist. That sounds pretty good. Run the spec again:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: visit playlists_path

     NameError:
       undefined local variable or method `playlists_path' for #&lt;RSpec::ExampleGroups::UserCreatesAPlaylist:0x007ff280950ef0&gt;
     # ./spec/features/user_creates_a_playlist_spec.rb:9:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 0.6029 seconds (files took 3.77 seconds to load)
8 examples, 1 failure, 1 pending
</code></pre></div></div>

<p>Cool. Now we can start implementing some other stuff. Like a route for <code class="highlighter-rouge">playlists_path</code>. This doesn‚Äôt need to be nested under anything.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:artists</span> <span class="k">do</span>
    <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">]</span>
  <span class="k">end</span>

  <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:show</span><span class="p">]</span>
  <span class="n">resources</span> <span class="ss">:playlists</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:index</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Run <code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: visit playlists_path

     ActionController::RoutingError:
       uninitialized constant PlaylistsController
     # /usr/local/rvm/gems/ruby-2.2.2/gems/rack-1.6.4/lib/rack/etag.rb:24:in `call'
     ...
</code></pre></div></div>

<p>We know how to fix this. Let‚Äôs make a controller: <code class="highlighter-rouge">$ touch app/controllers/playlists_controller.rb</code>. We know that we‚Äôll also need an index action and a view, so let‚Äôs make those too. (If you‚Äôre bored of following each tiny error, go ahead and skip ahead to the form creation section.)</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PlaylistsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ mkdir app/views/playlists
$ touch app/views/playlists/index.html.erb
</code></pre></div></div>

<p>Run the spec:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "New playlist"

     Capybara::ElementNotFound:
       Unable to find link or button "New playlist"
     # /usr/local/rvm/gems/ruby-2.2.2/gems/capybara-2.5.0/lib/capybara/node/finders.rb:43:in `block in find'
     ...
</code></pre></div></div>

<p>Capybara can‚Äôt find the ‚ÄúNew playlist‚Äù link. Go ahead and add that.</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>All Playlists<span class="nt">&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"New playlist"</span><span class="p">,</span> <span class="n">new_playlist_path</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: &lt;%= link_to "New playlist", new_playlist_path %&gt;

     ActionView::Template::Error:
       undefined local variable or method `new_playlist_path' for #&lt;#&lt;Class:0x007fba3880f698&gt;:0x007fba38d1cb68&gt;
     # ./app/views/playlists/index.html.erb:3:in `_app_views_playlists_index_html_erb__546494196404700757_70218897014620'
     ...
</code></pre></div></div>

<p>Add a route for the <code class="highlighter-rouge">new_playlist_path</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:artists</span> <span class="k">do</span>
    <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">]</span>
  <span class="k">end</span>

  <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:show</span><span class="p">]</span>
  <span class="n">resources</span> <span class="ss">:playlists</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:new</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "New playlist"

     AbstractController::ActionNotFound:
       The action 'new' could not be found for PlaylistsController
     # /usr/local/rvm/gems/ruby-2.2.2/gems/rack-1.6.4/lib/rack/etag.rb:24:in `call'
     ...
</code></pre></div></div>

<p>We need the <code class="highlighter-rouge">new</code> action in the <code class="highlighter-rouge">PlaylistsController</code>. We‚Äôll need to pass a new Playlist instance to our form. Let‚Äôs go ahead and create that now.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PlaylistsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">new</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "New playlist"

     ActionView::MissingTemplate:
       Missing template playlists/new, application/new with {:locale=&gt;[:en], :formats=&gt;[:html], :variants=&gt;[], :handlers=&gt;[:erb, :builder, :raw, :ruby, :coffee, :jbuilder]}. Searched in:
         * "/Users/rwarbelow/Desktop/Coding/Turing/mix_master/app/views"
     # /usr/local/rvm/gems/ruby-2.2.2/gems/rack-1.6.4/lib/rack/etag.rb:24:in `call'
     ...
</code></pre></div></div>

<p>It can‚Äôt find the template <code class="highlighter-rouge">playlists/new</code>, so let‚Äôs make that: <code class="highlighter-rouge">$ touch app/views/playlists/new.html.erb</code>.</p>

<p><code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: fill_in "playlist_name", with: playlist_name

     Capybara::ElementNotFound:
       Unable to find field "playlist_name"
     # /usr/local/rvm/gems/ruby-2.2.2/gems/capybara-2.5.0/lib/capybara/node/finders.rb:43:in `block in find'
     ...
</code></pre></div></div>

<p>So now Capybara is trying to find a field to fill in. This indicates that we‚Äôll need a form:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>New Playlist<span class="nt">&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@playlist</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Can you predict what the error will be? (Hint: what are we making a <code class="highlighter-rouge">form_for</code>?)</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: &lt;%= form_for(@playlist) do |f| %&gt;

     ActionView::Template::Error:
       uninitialized constant ActionView::CompiledTemplates::Playlist
     # ./app/views/playlists/new.html.erb:3:in `_app_views_playlists_new_html_erb___2408870859850317183_70310555634900'
     ...
</code></pre></div></div>

<p>We have an uninitialized constant <code class="highlighter-rouge">Playlist</code>. We know that playlist is something that will be stored in our database, so we‚Äôll need to generate a model: <code class="highlighter-rouge">$ rails g model Playlist name:string</code>. Make sure to migrate.</p>

<p>Now that we have the model, let‚Äôs run the test again. What will the error be?</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: check(song_one.title)

     Capybara::ElementNotFound:
       Unable to find checkbox "A Title"
     # /usr/local/rvm/gems/ruby-2.2.2/gems/capybara-2.5.0/lib/capybara/node/finders.rb:43:in `block in find'
     ...
</code></pre></div></div>

<p>Capybara is trying to find a checkbox with the text ‚ÄúA Title‚Äù next to it. We don‚Äôt have checkboxes rendered in our form. We‚Äôre trying to create a new checkbox for each song that we have. Here‚Äôs how we‚Äôll do that:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>New Playlist<span class="nt">&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@playlist</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>

  <span class="cp">&lt;%</span> <span class="vi">@songs</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">song</span><span class="o">|</span> <span class="cp">-%&gt;</span>
    <span class="nt">&lt;div&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">check_box_tag</span><span class="p">(</span><span class="ss">:song_ids</span><span class="p">,</span> <span class="n">song</span><span class="p">.</span><span class="nf">id</span><span class="p">,</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">'playlist[song_ids][]'</span><span class="p">,</span> <span class="ss">id: </span><span class="s2">"song-</span><span class="si">#{</span><span class="n">song</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">song</span><span class="p">.</span><span class="nf">title</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Since we‚Äôre using <code class="highlighter-rouge">@songs</code> in our <code class="highlighter-rouge">new.html.erb</code>, we‚Äôll also need to define that in our controller. In the <code class="highlighter-rouge">playlists_controller.rb</code> update your <code class="highlighter-rouge">new</code> method to the following:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">new</span>
    <span class="vi">@songs</span>    <span class="o">=</span> <span class="no">Song</span><span class="p">.</span><span class="nf">all</span>
  <span class="k">end</span>
</code></pre></div></div>

<p>Here we‚Äôve iterated over all songs in the database (<code class="highlighter-rouge">Song.all</code>) and made a <a href="http://apidock.com/rails/ActionView/Helpers/FormTagHelper/check_box_tag">check_box_tag</a> for each of them.</p>

<p><em>Go look at those docs and figure out what each argument in the <code class="highlighter-rouge">check_box_tag</code> method is before continuing.</em></p>

<p>Let‚Äôs run the test and see if Capybara can find those checkboxes now:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "Create Playlist"

     Capybara::ElementNotFound:
       Unable to find link or button "Create Playlist"
     # /usr/local/rvm/gems/ruby-2.2.2/gems/capybara-2.5.0/lib/capybara/node/finders.rb:43:in `block in find'
     ...
</code></pre></div></div>

<p>Excellent. It found the checkboxes, and now it is looking for the ‚ÄúCreate Playlist‚Äù button. Let‚Äôs add that:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>New Playlist<span class="nt">&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@playlist</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>

  <span class="cp">&lt;%</span> <span class="vi">@songs</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">song</span><span class="o">|</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;div&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">check_box_tag</span> <span class="ss">:song_ids</span><span class="p">,</span> <span class="n">song</span><span class="p">.</span><span class="nf">id</span><span class="p">,</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">'playlist[song_ids][]'</span><span class="p">,</span> <span class="ss">id: </span><span class="s2">"song-</span><span class="si">#{</span><span class="n">song</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">song</span><span class="p">.</span><span class="nf">title</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">submit</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>What will RSpec complain about next time? Think of where <code class="highlighter-rouge">form_for(@playlist)</code> will try to route to when you hit the submit button.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "Create Playlist"

     ActionController::RoutingError:
       No route matches [POST] "/playlists"
     # /usr/local/rvm/gems/ruby-2.2.2/gems/railties-4.2.5/lib/rails/rack/logger.rb:38:in `call_app'
     ...
</code></pre></div></div>

<p>We need a post for <code class="highlighter-rouge">'/playlists'</code>. Let‚Äôs add that to our routes:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:artists</span> <span class="k">do</span>
    <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">]</span>
  <span class="k">end</span>

  <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:show</span><span class="p">]</span>
  <span class="n">resources</span> <span class="ss">:playlists</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "Create Playlist"

     AbstractController::ActionNotFound:
       The action 'create' could not be found for PlaylistsController
     # /usr/local/rvm/gems/ruby-2.2.2/gems/rack-1.6.4/lib/rack/etag.rb:24:in `call'
     ...
</code></pre></div></div>

<p>Now add the create action. We know the next error is going to be that it can‚Äôt find the template. That‚Äôs not what we want anyway. Let‚Äôs think about this. Go ahead and put a <code class="highlighter-rouge">byebug</code> in the <code class="highlighter-rouge">create</code> method so that you can see your params coming in:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PlaylistsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">new</span>
    <span class="vi">@songs</span>    <span class="o">=</span> <span class="no">Song</span><span class="p">.</span><span class="nf">all</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">byebug</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Can you figure out what you need to do, and which params you need to permit in your strong params? Try it, then take a look below:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PlaylistsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">new</span>
    <span class="vi">@songs</span>    <span class="o">=</span> <span class="no">Song</span><span class="p">.</span><span class="nf">all</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="n">playlist_params</span><span class="p">)</span>
    <span class="n">redirect_to</span> <span class="vi">@playlist</span>
  <span class="k">end</span>

<span class="kp">private</span>

  <span class="k">def</span> <span class="nf">playlist_params</span>
    <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:playlist</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">song_ids: </span><span class="p">[])</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>What is that weird thing <code class="highlighter-rouge">song_ids: []</code> inside the strong params? <a href="http://guides.rubyonrails.org/action_controller_overview.html#strong-parameters">Read about it before moving on</a>.</p>

<p>Run <code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: @playlist = Playlist.create(playlist_params)

     ActiveRecord::UnknownAttributeError:
       unknown attribute 'song_ids' for Playlist.
     # ./app/controllers/playlists_controller.rb:10:in `create'
     ...
</code></pre></div></div>

<p>Hmm. <code class="highlighter-rouge">unknown attribute 'song_ids' for Playlist</code>. That makes sense, since we don‚Äôt have that attribute on our <code class="highlighter-rouge">Playlist</code> model. Let‚Äôs think about the relationship here. A playlist can have many songs, and a song can have many playlists (ie - a song can be used on multiple playlists). This means we‚Äôre gonna need a many-to-many relationship, and a many-to-many relationship indicates that we‚Äôll need a join table.</p>

<p>Let‚Äôs start by writing a model test to ensure that a Playlist has many <code class="highlighter-rouge">playlist_songs</code> and <code class="highlighter-rouge">songs</code> through that join table. Inside of <code class="highlighter-rouge">spec/models/playlist_spec.rb</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rails_helper'</span>

<span class="no">RSpec</span><span class="p">.</span><span class="nf">describe</span> <span class="no">Playlist</span><span class="p">,</span> <span class="s2">"associations"</span><span class="p">,</span> <span class="ss">type: :model</span> <span class="k">do</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_many</span><span class="p">(</span><span class="ss">:playlist_songs</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_many</span><span class="p">(</span><span class="ss">:songs</span><span class="p">).</span><span class="nf">through</span><span class="p">(</span><span class="ss">:playlist_songs</span><span class="p">)</span> <span class="p">}</span>
<span class="k">end</span>
</code></pre></div></div>

<p>How did I figure out this thing? I looked at <a href="http://matchers.shoulda.io/">the docs</a>. <strong>You should do that, too.</strong></p>

<p>Now if you run <code class="highlighter-rouge">rspec</code>, three things are going to be failing. AHH! Too much failing. Let‚Äôs just run that one model spec using the pattern <code class="highlighter-rouge">rspec path/to/spec/file.rb</code>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rspec spec/models/playlist_spec.rb
</code></pre></div></div>

<p>Whew. Much less overwhelming. Let‚Äôs look at the error:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) Playlist associations should have many playlist_songs
     Failure/Error: it { should have_many(:playlist_songs) }
       Expected Playlist to have a has_many association called playlist_songs (no association called playlist_songs)
     # ./spec/models/playlist_spec.rb:4:in `block (2 levels) in &lt;top (required)&gt;'

  2) Playlist associations should have many songs through playlist_songs
     Failure/Error: it { should have_many(:songs).through(:playlist_songs) }
       Expected Playlist to have a has_many association called songs (no association called songs)
     # ./spec/models/playlist_spec.rb:5:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 0.03436 seconds (files took 3.09 seconds to load)
2 examples, 2 failures

Failed examples:

rspec ./spec/models/playlist_spec.rb:4 # Playlist associations should have many playlist_songs
rspec ./spec/models/playlist_spec.rb:5 # Playlist associations should have many songs through playlist_songs
</code></pre></div></div>

<p>The important bits are <code class="highlighter-rouge">no association called playlist_songs</code> and <code class="highlighter-rouge">no association called songs</code>. Let‚Äôs go into our Playlist model and implement those:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Playlist</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:playlist_songs</span>
  <span class="n">has_many</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">through: :playlist_songs</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Want to know more about <code class="highlighter-rouge">has_many, through</code> and why you should not be using <code class="highlighter-rouge">has_and_belongs_to_many</code>? Check out <a href="http://blog.flatironschool.com/why-you-dont-need-has-and-belongs-to-many/">this blog post</a>.</p>

<p>Run just that spec file again:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) Playlist associations should have many playlist_songs
     Failure/Error: it { should have_many(:playlist_songs) }
       Expected Playlist to have a has_many association called playlist_songs (PlaylistSong does not exist)
     # ./spec/models/playlist_spec.rb:4:in `block (2 levels) in &lt;top (required)&gt;'

  2) Playlist associations should have many songs through playlist_songs
     Failure/Error: it { should have_many(:songs).through(:playlist_songs) }

     NameError:
       uninitialized constant Playlist::PlaylistSong
     # /usr/local/rvm/gems/ruby-2.2.2/gems/shoulda-matchers-3.0.1/lib/shoulda/matchers/active_record/association_matcher.rb:1116:in `rescue in class_exists?'
     # /usr/local/rvm/gems/ruby-2.2.2/gems/shoulda-matchers-3.0.1/lib/shoulda/matchers/active_record/association_matcher.rb:1113:in `class_exists?'
     # /usr/local/rvm/gems/ruby-2.2.2/gems/shoulda-matchers-3.0.1/lib/shoulda/matchers/active_record/association_matcher.rb:973:in `matches?'
     # ./spec/models/playlist_spec.rb:5:in `block (2 levels) in &lt;top (required)&gt;'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Playlist::PlaylistSong
     #   /usr/local/rvm/gems/ruby-2.2.2/gems/shoulda-matchers-3.0.1/lib/shoulda/matchers/active_record/association_matchers/model_reflection.rb:16:in `associated_class'

Finished in 0.03994 seconds (files took 3.17 seconds to load)
2 examples, 2 failures

Failed examples:

rspec ./spec/models/playlist_spec.rb:4 # Playlist associations should have many playlist_songs
rspec ./spec/models/playlist_spec.rb:5 # Playlist associations should have many songs through playlist_songs
</code></pre></div></div>

<p>These two things are the important parts: <code class="highlighter-rouge">PlaylistSong does not exist</code> and <code class="highlighter-rouge">uninitialized constant Playlist::PlaylistSong</code>. What should we do?</p>

<p>Well, it‚Äôs an uninitialized constant (indicating a class), and we know it is something we‚Äôll store in the database, so we should probably make a model: <code class="highlighter-rouge">rails g model PlaylistSong song:references playlist:references</code> and then <code class="highlighter-rouge">rake db:migrate</code>.</p>

<p>Ok, let‚Äôs run the spec again:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: redirect_to @playlist

     NoMethodError:
       undefined method `playlist_url' for #&lt;PlaylistsController:0x007f860d9b32d8&gt;
     # ./app/controllers/playlists_controller.rb:11:in `create'
    ...
</code></pre></div></div>

<p>How does <code class="highlighter-rouge">redirect_to @playlist</code> even work? Read <a href="http://stackoverflow.com/questions/23082683/how-does-redirect-to-method-work-in-ruby">this Stackoverflow answer</a> before continuing.</p>

<p>We know that <code class="highlighter-rouge">NoMethodError: undefined method </code>playlist_url‚Äô` means we‚Äôll need a show route. Let‚Äôs add that:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:artists</span> <span class="k">do</span>
    <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">]</span>
  <span class="k">end</span>

  <span class="n">resources</span> <span class="ss">:songs</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:show</span><span class="p">]</span>
  <span class="n">resources</span> <span class="ss">:playlists</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:show</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Run <code class="highlighter-rouge">rspec</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Failures:

  1) User creates a playlist they see the page for the individual playlist
     Failure/Error: click_on "Create Playlist"

     AbstractController::ActionNotFound:
       The action 'show' could not be found for PlaylistsController
     # /usr/local/rvm/gems/ruby-2.2.2/gems/rack-1.6.4/lib/rack/etag.rb:24:in `call'
     ...
</code></pre></div></div>

<p>We know how to fix this along with adding the view. Go ahead and do that on your own, then check the code below if you‚Äôre stuck. Follow the errors to drive out what your view needs to have/look like.</p>

<ul>
  <li><code class="highlighter-rouge">playlists_controller.rb</code>:</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PlaylistsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">new</span>
    <span class="vi">@songs</span>    <span class="o">=</span> <span class="no">Song</span><span class="p">.</span><span class="nf">all</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="n">playlist_params</span><span class="p">)</span>
    <span class="n">redirect_to</span> <span class="vi">@playlist</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@playlist</span> <span class="o">=</span> <span class="no">Playlist</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
  <span class="k">end</span>

<span class="kp">private</span>

  <span class="k">def</span> <span class="nf">playlist_params</span>
    <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:playlist</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">song_ids: </span><span class="p">[])</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">app/views/playlists/show.html.erb</code></li>
</ul>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@playlist</span><span class="p">.</span><span class="nf">name</span> <span class="cp">%&gt;</span><span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;ul&gt;</span>
  <span class="cp">&lt;%</span> <span class="vi">@playlist</span><span class="p">.</span><span class="nf">songs</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">song</span><span class="o">|</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">song</span><span class="p">.</span><span class="nf">title</span><span class="p">,</span> <span class="n">song</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<h4 id="your-turn">Your turn</h4>

<p>Write and implement a feature test for viewing all playlists (<code class="highlighter-rouge">spec/features/user_views_all_playlists_spec.rb</code>):</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>As a user
Given that playlists exist in the database
When I visit the playlists index
Then I should see each playlist's name
And each name should link to that playlist's individual page
</code></pre></div></div>

<p>Write and implement a feature test for editing an playlist (<code class="highlighter-rouge">spec/features/user_edits_a_playlist_spec.rb</code>):</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>As a user
Given that a playlist and songs exist in the database
When I visit that playlist's show page
And I click on "Edit"
And I enter a new playlist name
And I select an additional song
And I uncheck an existing song
And I click on "Update Playlist"
Then I should see the playlist's updated name
And I should see the name of the newly added song
And I should not see the name of the removed song
</code></pre></div></div>

<p>Make sure to commit your work! Use proper commit message manners.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git add .
$ git commit
$ git checkout master
$ git merge 4_implement-playlists
$ git push heroku master
$ heroku run rake db:migrate
</code></pre></div></div>

<h3 id="on-to-mix-master-part-5-refactoring">On to <a href="5_refactoring.markdown">Mix Master Part 5: Refactoring</a></h3>
:ET