I"1<p>I think the most common git tasks are easier to do with the command line.</p>

<ul>
  <li><code class="highlighter-rouge">git init</code></li>
  <li><code class="highlighter-rouge">git checkout -b new-branch</code></li>
  <li><code class="highlighter-rouge">git merge new-branch</code></li>
  <li><code class="highlighter-rouge">git fetch</code></li>
  <li><code class="highlighter-rouge">git push github master:gh-pages</code></li>
</ul>

<p>Thereâ€™s a couple use cases that Iâ€™ve been glad I had a git GUI. Letâ€™s get one.</p>

<h4 id="a-note-for-the-haters-">A note for the haters ðŸ‘¿</h4>

<p>If you really donâ€™t want a GUI for your git, manage all of your remotes via SSH, and donâ€™t ever visit github.com.</p>

<h2 id="gitx">Gitx</h2>

<p>There are several versions of Gitx. Iâ€™m going to show you my favorite. I canâ€™t remember why I donâ€™t like the other ones, but this has what I need.</p>

<h3 id="installation">Installation</h3>

<p>Get yourself <a href="https://caskroom.github.io/">Homebrew Cask</a>, and manage all your apps through the terminal. Get it by running the following command.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew tap caskroom/cask
</code></pre></div></div>

<p>Then you can see the controversy by typing</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew cask search gitx
</code></pre></div></div>

<p>You should get 3 results</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">==&gt;</span> Exact match
gitx
<span class="o">==&gt;</span> Partial matches
laullon-gitx  rowanj-gitx   
</code></pre></div></div>

<p>The correct version is rowanj-gitx</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew cask <span class="nb">install </span>rowanj-gitx
</code></pre></div></div>

<h2 id="using-gitx">Using Gitx</h2>

<p>From any folder that is a valid git repository, type <code class="highlighter-rouge">gitx</code></p>

<h3 id="use-case-all-the-branches">Use case: all the branches</h3>

<ul>
  <li>See what branches are active and havenâ€™t been merged in</li>
  <li>Get a preview of what features are coming</li>
  <li>See what branch a bit of code was added on</li>
</ul>

<h3 id="use-case-finding-a-change">Use case: finding a change</h3>

<ul>
  <li>Use the search box to search commit messages</li>
  <li>Quickly scan lots of messages and branches</li>
</ul>

<h3 id="use-case-state-of-the-codebase-in-the-past">Use case: state of the codebase in the past</h3>

<ul>
  <li>Select a branch/tag/commit, and browse files to see what they looked like</li>
</ul>

<h3 id="use-case-splitting-up-code-for-commits">Use case: splitting up code for commits</h3>

<p>If you donâ€™t have a project with a bunch of uncommitted code, you can always run something like <code class="highlighter-rouge">git reset HEAD~3</code> and youâ€™ll have a bunch of uncommitted code.</p>

<ul>
  <li>click on <strong>Stage</strong> in the top left</li>
  <li>All unstaged changes are on the left. Click on a file to see what changes have been made</li>
  <li>Drag the files you want to commit to the right</li>
  <li>If you want to commit only specific lines for a file, highlight those lines after selecting a file, and click <strong>Stage Lines</strong></li>
  <li>Write your message, and commit</li>
</ul>

<h3 id="thinky-time">Thinky time</h3>

<ul>
  <li>Whatâ€™s easier to do with the terminal, and whatâ€™s easier to do with gitx?</li>
  <li>What would be easier to do on github, and what would be easier with gitx?</li>
</ul>

<h2 id="diffmerge">Diffmerge</h2>

<p>Check out <a href="https://github.com/turingschool-examples/a-tale-of-two-branches">a tale of two branches</a> for installation instructions and use cases</p>
:ET