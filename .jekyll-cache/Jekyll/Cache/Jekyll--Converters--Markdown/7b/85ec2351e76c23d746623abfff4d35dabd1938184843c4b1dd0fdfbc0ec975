I"ç<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>understand why MVC is a useful model and how it‚Äôs used in Rails</li>
  <li>explain the responsibilities of each component of an MVC application</li>
  <li>diagram the typical MVC request/response loop</li>
</ul>

<h2 id="lecture">Lecture</h2>

<ul>
  <li>clone the <a href="http://github.com/rwarbelow/mvc-rest-example">mvc-rest-example</a> repo</li>
</ul>

<h3 id="what-is-the-rails-framework">What is the Rails Framework?</h3>

<ul>
  <li>library that sets up a large part of the code for you</li>
  <li>takes care of basic configuration</li>
  <li>you write the customizable parts of your application</li>
</ul>

<h3 id="what-is-mvc-in-rails">What is MVC in Rails?</h3>

<ul>
  <li>Model/View/Controller</li>
  <li>Request/response loop ‚Äì Here‚Äôs <a href="http://tutorials.jumpstartlab.com/images/rails_mvc.png">an illustration of the whole flow</a></li>
  <li>separates the responsibilities of an application into three layers (MVC)</li>
</ul>

<h4 id="receiving-the-request---router">Receiving the Request - Router</h4>

<ul>
  <li>application receives a request</li>
  <li>router recognizes URL and matches it to a controller action</li>
  <li>if no routes in the <code class="highlighter-rouge">routes.rb</code> file match the requested route, you‚Äôll get a routing error</li>
  <li>example <code class="highlighter-rouge">routes.rb</code> file:</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>get '/articles', to: 'articles#index'
</code></pre></div></div>
<p>There are other ways to define routes. We will talk about these in the next lesson.</p>

<ul>
  <li>More about <a href="http://guides.rubyonrails.org/routing.html">Rails Routing</a></li>
</ul>

<h4 id="controller-processing-the-request">Controller: Processing the Request</h4>

<ul>
  <li>controllers live in <code class="highlighter-rouge">app/controllers</code></li>
  <li>controllers are Ruby classes that inherit from ActionController::Base</li>
  <li>sits between the model (database interface) and the view (presentation interface)</li>
  <li>handles HTTP request and determines what to do</li>
  <li>can access parameters from URLs or forms</li>
  <li>can delegate work to a model or have a model fetch from the database</li>
  <li>generally returns HTML, but can also return JSON, CSV, XML, etc.</li>
  <li>methods inside of the controller class are the methods specified in <code class="highlighter-rouge">routes.rb</code> ‚Äì for example: <code class="highlighter-rouge">get '/articles', to: 'articles#index'</code> is looking for an <code class="highlighter-rouge">index</code> method within the Articles controller.</li>
  <li>example <code class="highlighter-rouge">articles_controller.rb</code> file:</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">ArticlesController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
	<span class="k">def</span> <span class="nf">index</span>
		<span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="p">.</span><span class="nf">all</span>   <span class="c1">#fetches all articles from the Article model</span>
	<span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">rails generate controller Authors</code> will generate a controller, a view folder, test files, a helper, a JavaScript file, and a CSS file.</li>
  <li>More about the <a href="http://guides.rubyonrails.org/action_controller_overview.html">Controller</a></li>
</ul>

<h4 id="model-business-logic--database">Model: Business Logic &amp; Database</h4>

<ul>
  <li>models live in <code class="highlighter-rouge">app/models</code></li>
  <li>models can be POROs (Plain Old Ruby Objects) or can inherit from ActiveRecord::Base</li>
  <li>act to represent the ‚Äúthings‚Äù in your application ‚Äì articles, users, items, etc.</li>
  <li>relate Ruby objects to records in the database (‚Äòtalk‚Äô to the database)</li>
  <li>encapsulate logic for validations, associations, and any business logic you define for the model</li>
  <li>models should perform the logic of your application</li>
  <li>method names are provided for column names in database tables (ie: <code class="highlighter-rouge">user.first_name</code>, <code class="highlighter-rouge">user.last_name</code> when first_name and last_name are columns in the database)</li>
  <li>models that inherit from ActiveRecord::Base include many useful methods ‚Äì we‚Äôll talk about these tomorrow.</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
	<span class="n">belongs_to</span> <span class="ss">:author</span>
	<span class="n">has_many</span>   <span class="ss">:comments</span>

	<span class="k">def</span> <span class="nf">some_custom_method</span>
		<span class="c1"># your code here</span>
	<span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>
<ul>
  <li><code class="highlighter-rouge">rails generate model Author first_name:string last_name:string</code> will generate a model, a migration, and test files.</li>
  <li>More about <a href="http://guides.rubyonrails.org/active_record_basics.html">Models</a></li>
</ul>

<h4 id="view-output-template">View: Output Template</h4>

<ul>
  <li>views live in <code class="highlighter-rouge">app/views</code></li>
  <li>provide a template to display the application‚Äôs data</li>
  <li>most templates are written using embedded Ruby and HTML</li>
  <li>
    <p>generally one view template per controller action ‚Äì for example, if you have <code class="highlighter-rouge">def index</code> in your controller, you will have a <code class="highlighter-rouge">index.html.erb</code> in your views folder</p>
  </li>
  <li>More about <a href="http://guides.rubyonrails.org/action_view_overview.html">Views</a></li>
</ul>

<h2 id="other-resources">Other Resources</h2>

<ul>
  <li>http://www.tutorialspoint.com/ruby-on-rails/rails-framework.htm</li>
  <li>http://en.wikibooks.org/wiki/Ruby_on_Rails/Getting_Started/Model-View-Controller</li>
  <li>http://www.codelearn.org/ruby-on-rails-tutorial/mvc-in-rails</li>
  <li>http://betterexplained.com/articles/intermediate-rails-understanding-models-views-and-controllers/</li>
  <li>more on Rails command line generators <a href="http://guides.rubyonrails.org/command_line.html">here</a></li>
</ul>
:ET