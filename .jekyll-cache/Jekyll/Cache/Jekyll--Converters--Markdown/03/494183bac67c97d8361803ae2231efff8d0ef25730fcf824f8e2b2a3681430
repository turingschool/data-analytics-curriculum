I"Ÿ<h2 id="goals">Goals</h2>

<p>Weâ€™ve gotten fairly familiar with ActiveRecordâ€™s most common methods. Letâ€™s make sure we donâ€™t get rusty with those other less-frequently used methods.</p>

<p>For Backend Module 2 students, this obstacle course is meant to test your knowledge over the course of the entire inning. We do not expect (nor encourage) you to finish this early. <strong>A pull request is due in week 6 as a deliverable to graduate the module.</strong></p>

<p>The first few portions of this obstacle course are meant to test your knowledge around processing things in Ruby to put more of that work on the database (PostgreSQL) to make our own code easier to maintain. Your job will be to remove the code that processes data in Ruby, and replace that code with proper ActiveRecord commands to do the exact same work.</p>

<p><strong>There will be more than one way to solve some of these problems.</strong></p>

<p>The remaining portions of the obstacle course will increase in difficulty and will teach you how to turn raw SQL into proper ActiveRecord commands.</p>

<h2 id="instructions">Instructions</h2>

<ol>
  <li>
    <p>Fork <a href="https://github.com/turingschool-projects/activerecord-obstacle-course">the repo</a> to your own GitHub account, then clone down your fork.</p>
  </li>
  <li>
    <p>Do the usual setup</p>
  </li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install
</span>bundle update
rake db:<span class="o">{</span>drop,create,migrate,seed<span class="o">}</span>  <span class="c"># seeding will take a few moments</span>
rspec
<span class="c"># you should see several passing tests, and a few skipped tests</span>
</code></pre></div></div>

<ol>
  <li>
    <p><strong>You must not change the setup or expectations of any test.</strong></p>
  </li>
  <li>
    <p>Start with the top test within <code class="highlighter-rouge">spec/models/activerecord_obstacle_course_spec.rb</code> and work in order.</p>
  </li>
  <li>
    <p>To run your tests, you can run <code class="highlighter-rouge">rspec spec/models/activerecord_obstacle_course_spec.rb</code></p>
  </li>
  <li>
    <p>If you want to run one specific test, you can run <code class="highlighter-rouge">rspec spec/models/activerecord_obstacle_course_spec.rb:LINE_NUMBER</code>.</p>

    <ul>
      <li>For example: <code class="highlighter-rouge">rspec spec/models/activerecord_obstacle_course_spec.rb:34</code></li>
    </ul>
  </li>
  <li>
    <p>Most of the tests follow the same formatâ€¦</p>

    <ul>
      <li>
        <p>Comment out the original ruby code â€“ donâ€™t erase it completely.</p>

        <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># -----------------------------</span>
<span class="c1"># A section with some Ruby code</span>
<span class="c1"># -----------------------------</span>

</code></pre></div>        </div>
      </li>
      <li>
        <p>Write a refactored implementation using ActiveRecord. Assign to the same variables as above.</p>

        <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># -----------------------------</span>
<span class="c1"># A section for you to write refactor the Ruby or raw SQL code</span>
<span class="c1"># -----------------------------</span>
</code></pre></div>        </div>
      </li>
      <li>
        <p>Leave the expectations alone. They will determine whether you have a working solution.</p>

        <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># -----------------------------</span>
<span class="c1"># The expectation</span>
<span class="c1"># -----------------------------</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ol>

<h2 id="extensions">Extensions</h2>

<p>If you finish everything in here before week 6, youâ€™re welcome to take on the following extensions:</p>

<ul>
  <li>Break your solutions into scopes and/or class methods.</li>
  <li>Try to implement one example using ActiveRecordâ€™s <code class="highlighter-rouge">merge</code>.</li>
</ul>
:ET