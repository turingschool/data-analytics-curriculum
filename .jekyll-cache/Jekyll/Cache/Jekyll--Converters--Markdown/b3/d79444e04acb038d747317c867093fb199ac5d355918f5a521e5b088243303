I"€<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Understand how Emberâ€™s object model works</li>
  <li>Create two-way data bindings</li>
  <li>Implement computed properties on the controller level</li>
</ul>

<h2 id="structure">Structure</h2>

<ul>
  <li>5 - Warm Up</li>
  <li>15 - Lecture: Introduction to Ember</li>
  <li>25 - Lecture: The Ember Object Model</li>
  <li>5 - Break</li>
  <li>10 - Code Along</li>
  <li>30 - Pair Practice</li>
  <li>25 - Recap and Refactor</li>
  <li>5 - Wrap Up</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://github.com/turingschool-examples/good-tipper">Good Tipper</a></li>
</ul>

<h2 id="warm-up">Warm Up</h2>

<p>Make sure you have all of the following installed:</p>

<ul>
  <li><a href="http://nodejs.org">Node.js</a></li>
  <li><a href="http://www.ember-cli.com/">ember-cli</a> (You made need to use <code class="highlighter-rouge">sudo</code> depending on how your environment is configured.)</li>
  <li>The <a href="https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi">Ember Inspector</a></li>
</ul>

<p>Also: Clone a copy of <a href="https://github.com/turingschool-examples/good-tipper">this repository</a>. Weâ€™ll be using it during the Code-Along and Pair Practice segments of the lesson.</p>

<h2 id="lecture">Lecture</h2>

<p>Weâ€™ll cover the following topics:</p>

<ul>
  <li>What Ember actually is and does</li>
  <li>Itâ€™s history and lineage</li>
  <li>The technology that makes up Ember (Handlebars, Ember Metal, RSVP)</li>
  <li>The tooling around Ember (the Ember Inspector, ember-cli, Ember Data)</li>
  <li>The Ember object model
    <ul>
      <li>Classes and instances</li>
      <li>Initializing an object (and calling <code class="highlighter-rouge">this._super()</code>)</li>
      <li>Computer properties</li>
      <li>Observers</li>
      <li>Working with arrays</li>
      <li>Bindings</li>
    </ul>
  </li>
</ul>

<h2 id="workshop">Workshop</h2>

<h3 id="code-along">Code Along</h3>

<p>Weâ€™re going to implement the basic functionality of <a href="https://github.com/turingschool-examples/good-tipper">Good Tipper</a>. Follow along!</p>

<h3 id="pair-practice">Pair Practice</h3>

<p>Can you add any of the following to your application?</p>

<ul>
  <li>A function that observes the tip price and displays a message when someone is being a cheapskate?</li>
  <li>Presets calculations for 15%, 18%, and 20%. When the user clicks a button, the tip percentage is automatically set to that amount.</li>
  <li>Automatic calculations for 15%, 18%, and 20%. When the user enters an amount for the cost of the meal, they should automatically see these three values.</li>
  <li><strong>Challenge</strong>: The user wants to be able to dial in an amount and a tip and save it to an array and see all of their recent meals in a table (bonus points if you store the data using <code class="highlighter-rouge">localStorage</code>).</li>
</ul>

<h2 id="wrap-up">Wrap Up</h2>

<p>What are some of the similarities between Emberâ€™s object models and Rubyâ€™s? Is there anything you like better? Is there anything you wish Ember stole from Ruby (and/or Rails)?</p>
:ET