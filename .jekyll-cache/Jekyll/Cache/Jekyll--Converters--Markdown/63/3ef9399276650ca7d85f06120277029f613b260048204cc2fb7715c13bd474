I"z<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Learn about Test Coverage tools and why they can be useful to your projects</li>
  <li>Learn about Continuous Integration services and why’d you use them</li>
  <li>Learn about tools for evaluating Code Quality</li>
</ul>

<h2 id="structure">Structure</h2>

<ul>
  <li>5 - Warmup</li>
  <li>25 - Session 1 - Research</li>
  <li>10 - Session 2 - Test Coverage Expert</li>
  <li>10 - Session 3 - Continuous Integration Expert</li>
  <li>10 - Session 4 - Code Quality Expert</li>
  <li>6 - Session 5 - Gathering Questions</li>
  <li>18 - Session 6 - Reviewing Questions</li>
  <li>3 - Wrapup</li>
</ul>

<h2 id="content">Content</h2>

<p>Today we’re going to try a “jigsaw” approach to exploring three topics across six short sessions.</p>

<h3 id="content-areas">Content Areas</h3>

<p>Each student will be a part of a Research Group investigating one of the following:</p>

<h4 id="test-coverage-with-simplecov">Test Coverage with SimpleCov</h4>

<p>Learn about SimpleCov and what Test Coverage is all about. Some ideas:</p>

<ul>
  <li>Find the project on GitHub and check out the readme</li>
  <li>Google for SimpleCov tutorial and see what looks interesting</li>
  <li>This <a href="https://github.com/turingschool/lesson_plans/blob/master/ruby_01-object_oriented_programming_with_ruby/measuring_improving_test_coverage.markdown">Turing tutorial</a></li>
  <li>Get it running for any project and observe the output</li>
</ul>

<h4 id="continuous-integration-with-travis-ci">Continuous Integration with Travis CI</h4>

<ul>
  <li>Google to learn about what Continuous Integration is</li>
  <li>Figure out why we use a service rather than just run it on our laptops</li>
  <li>What CI services seem to be popular in the Ruby world?</li>
  <li>What’s Travis CI all about? How does it work?</li>
  <li>How do you setup a project on Travis? Get one working to demo.</li>
  <li>What might be tricky about running on CI? Anything different than running on your local machine?</li>
  <li>Why would someone pay for CI?</li>
  <li>Why might a company or project want to run their own CI “in house”?</li>
</ul>

<h4 id="code-quality">Code Quality</h4>

<ul>
  <li>Find the Readme for the Reek gem</li>
  <li>What is Reek all about? How does it work?</li>
  <li>What kind of quality metrics does Reek use?</li>
  <li>Is Reek just for Ruby code?</li>
  <li>Get it running on one of your projects for a demo</li>
  <li>What kind of “problems” does it find? Do these seem to be legit problems?</li>
  <li>Check out Code Climate</li>
  <li>Set it up for the same project</li>
  <li>Do you get the same feedback?</li>
  <li>Why might you choose Code Climate over Reek, or vice versa?</li>
  <li>Check out thoughtbot’s <a href="https://houndci.com/">“Hound” project</a></li>
  <li>How does Hound compare to Reek and Code Climate?</li>
  <li>Can you get it running for one of your projects?</li>
</ul>

<h3 id="warmup">Warmup</h3>

<p>For warmup, before you get into your Research Group, spend five minutes getting your feet wet with your research topic.</p>

<h3 id="session-1---research-25-minutes">Session 1 - Research (25 Minutes)</h3>

<p>In this session your goal is to “build expertise”. Gather into your “Research Groups” specified in the outline. During this time you’re group is collaborating to put together a collection of notes / key understandings such as:</p>

<ul>
  <li>What is this thing?</li>
  <li>Who makes it / where does it come from?</li>
  <li>Why is it useful?</li>
  <li>Who uses it?</li>
  <li>How do you put it into action?</li>
  <li>How do you get / interpret the results?</li>
  <li>Put together a short demo (less than 3 minutes)</li>
  <li>How can it affect your development process?</li>
  <li>What options might be worth configuring?</li>
  <li>Are there any downsides to using it?</li>
  <li>Where can a person go to learn more about it? Any resources seem better than others?</li>
</ul>

<p>Each person from the “Research Group” needs to finish session 1 with their own set of notes and their demo ready to go.</p>

<h3 id="session-2---test-coverage-expert-10-minutes">Session 2 - Test Coverage Expert (10 Minutes)</h3>

<p>After a short break, we will recombine into your “Learning Groups”. You should have one person from each of the Research Groups.</p>

<p>During Session 2, the person from the Test Coverage research group will share their findings. While they’re sharing, the rest of the group should:</p>

<ul>
  <li>Take their own notes</li>
  <li>Ask clarifying questions</li>
  <li>Brainstorm/record any depth questions that the researcher isn’t able to answer</li>
</ul>

<p>Make sure to watch the clock so you each have a good set of notes, understandings, and questions by the end of the session.</p>

<h3 id="session-3---continuous-integration-expert-10-minutes">Session 3 - Continuous Integration Expert (10 Minutes)</h3>

<p>Repeat the same process with the Continuous Integration researcher sharing their findings.</p>

<h3 id="session-4---code-quality-expert-10-minutes">Session 4 - Code Quality Expert (10 Minutes)</h3>

<p>Repeat the same process with the Code Quality researcher sharing their findings.</p>

<h3 id="session-5---gathering-questions-6-minutes">Session 5 - Gathering Questions (6 minutes)</h3>

<p>During this short session, one person from each Learning Group should come write their unanswered questions on the front board.</p>

<h3 id="session-6---reviewing-questions">Session 6 - Reviewing Questions</h3>

<p>We’ll then review and attempt to answer your questions all together as a group.</p>

<h3 id="wrapup">Wrapup</h3>

<p>And finally we’ll wrap it up with a few review questions.</p>
:ET