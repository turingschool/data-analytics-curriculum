I"[<h1 id="remote-pairing">Remote Pairing</h1>

<p>Pairing is fairly straightforward when you’re side-by-side with
your pair. But sometimes you’ll want to collaborate remotely –
perhaps with an out-of-town mentor or at night while you and a teammate
are at home.</p>

<p>Fortunately there’s been a lot of progress over the last several
years on tooling to support this kind of workflow. Some of the tools
have gotten so good that you may even find you <em>prefer</em> a “remote”
workflow over a standard side-by-side one.</p>

<p>In this session, we’re going to practice pairing “remotely” while
both you and your pair are in the building</p>

<h2 id="exercises">Exercises</h2>

<p>For this session we’ll use <a href="https://github.com/turingschool/challenges/blob/master/fundamental_logic_gates.markdown">these exercises</a>
on fundamental logic gates. You and your pair will be working together
to implement Ruby simulations of some fundamental computer hardware
concepts.</p>

<h2 id="setup">Setup</h2>

<p>If you have not already, install <a href="https://screenhero.com/">Screenhero</a>.
Screenhero is a remote screen-sharing application that let’s you and a
partner share control of the same desktop. Additionally, the app includes
audio chat so you can communicate while you work.
It has a small learning curve, but once you get the hang of it, the interface
is quite nice. (<strong>Note:</strong> you may have to sign in with your slack account
to download the app.)</p>

<p><strong>Sharing Your Screen</strong></p>

<p>Once the app is downloaded, you should get a Screenhero menu bar icon
where you can add friends and initiate a screen sharing session. Add
your pair and select one person to initiate the session.</p>

<p><strong>Slack Integration</strong></p>

<p>Additionally, Screenhero includes a slack integration that makes it
easy to initiate a session. From the slack app, type <code class="highlighter-rouge">/hero @username</code>
to initiate a screenhero session with another user.</p>

<h2 id="sessions">Sessions</h2>

<p>Spend the next ~90 minutes working through the challenges outlined
in the <a href="https://github.com/turingschool/challenges/blob/master/fundamental_logic_gates.markdown">exercise</a>.</p>

<p>Don’t forget to take pomodoros!</p>

<p>For each 25 minute session, try one of the following techniques:</p>

<h3 id="side-by-side">Side-By-Side</h3>

<p>Use your traditional pairing setup (sitting next to your partner),
but this time use screenhero. You’ll find that you both see and control
the same screen, which is nice.</p>

<h3 id="face-to-face">Face-to-Face</h3>

<p>Use Screenhero, but sit in such a way that you and your partner are
facing, and slightly to one side of each other. This usually works best
if you sit on opposite sides of a desk and put your laptops next to
one another but facing opposite directions.</p>

<p>The nice thing about this approach is you both still see and control
the same screen, but you get a much better view of your partner’s
face, which makes communication easier.</p>

<h3 id="screenhero-from-another-room">Screenhero from another room</h3>

<p>Finally try simulating a true remote pairing setup by using Screenhero
to pair from different rooms (or different sides of a room) within
Turing. This time you’ll need to use headphones and (ideally) a microphone
to get audio communication with your partner.</p>
:ET