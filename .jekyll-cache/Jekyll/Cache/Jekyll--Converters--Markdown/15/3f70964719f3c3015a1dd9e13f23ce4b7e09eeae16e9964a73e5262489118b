I"=<p><strong>Current Status</strong>: Draft (Work in Progress)</p>

<h3 id="activerecord-queries">ActiveRecord Queries</h3>

<ul>
  <li>ActiveRecord delays queries until it needs the data</li>
  <li>Chaining queries together (e.g. <code class="highlighter-rouge">Item.in_stock.on_sale</code>)</li>
  <li>Since theyâ€™re delayed, queries can be passed around and chained</li>
  <li>Recap of the basic query methods (<code class="highlighter-rouge">.where</code>, <code class="highlighter-rouge">.limit</code>, <code class="highlighter-rouge">.order</code>)
    <ul>
      <li><code class="highlighter-rouge">.where</code></li>
      <li><code class="highlighter-rouge">.limit</code></li>
      <li><code class="highlighter-rouge">.order</code></li>
    </ul>
  </li>
</ul>

<h3 id="what-are-scopes">What are scopes?</h3>

<ul>
  <li>Scopes allow you define and chain query criteria in a declarative and reusable manner</li>
  <li>Scopes can use parameters with a lambda</li>
  <li>Scopes can take parameters</li>
  <li><code class="highlighter-rouge">default_scope</code></li>
  <li>Overriding <code class="highlighter-rouge">default_scope</code> and <code class="highlighter-rouge">unscoped</code></li>
  <li>Scopes and joins</li>
  <li><code class="highlighter-rouge">scope</code> is really just the same as defining a class method</li>
  <li>Using lambdas is stupid because you could just write a class method</li>
</ul>

<h3 id="performance-hacks">Performance Hacks</h3>

<ul>
  <li><code class="highlighter-rouge">select</code></li>
  <li><code class="highlighter-rouge">pluck</code></li>
</ul>
:ET