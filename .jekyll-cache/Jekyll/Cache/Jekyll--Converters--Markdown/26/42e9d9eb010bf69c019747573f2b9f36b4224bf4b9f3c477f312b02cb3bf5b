I"<<<h3 id="goals">Goals</h3>

<p>By the end of this lesson, you will know/be able to:</p>

<ul>
  <li>define CRUD in the programming sense of the word</li>
  <li>add functionality to complete the <em>U</em>pdate and <em>D</em>elete functionality of CRUD for a Sinatra app</li>
  <li>divide responsibilities between the controller, views, and models</li>
</ul>

<h3 id="structure">Structure</h3>

<ul>
  <li>Lecture</li>
  <li>Code-along</li>
  <li>Work Time</li>
</ul>

<h3 id="check-for-understanding">Check for Understanding</h3>

<p>Fork the <a href="https://gist.github.com/Carmer/2c616bc4d840f02b5ca7879082facdbf">cfu_crud_in_sinatra.markdown</a> gist and click the edit button.</p>

<h3 id="video">Video</h3>

<p>None yet.</p>

<h3 id="repository">Repository</h3>

<ul>
  <li><a href="https://github.com/turingschool-examples/task-manager/tree/crud-lesson">TaskManager: crud-lesson branch</a>: this repository is the result of completing the <a href="https://github.com/JumpstartLab/curriculum/blob/master/source/projects/task_manager.markdown">TaskManager tutorial</a>. If following the sequence of lessons, students should already have their own TaskManager app and should not have to clone this down.</li>
</ul>

<h3 id="other-setup-things">Other Setup Things</h3>

<p>Want a better error page? What about a layout to connect your stylesheet? Check out the <a href="https://github.com/turingschool/challenges/blob/master/sinatra_view_boilerplate.markdown">Sinatra View Boilerplate</a>.</p>

<h3 id="review">Review</h3>

<p>Let’s diagram the MVC structure that we talked about briefly yesterday.</p>

<h3 id="lecture">Lecture</h3>

<ul>
  <li>
    <p>How are <code class="highlighter-rouge">TaskManager</code> and <code class="highlighter-rouge">Task</code> related?</p>
  </li>
  <li>
    <p>What is CRUD (in the programming sense of the word)? What CRUD functionality do we have in TaskManager already and what are we missing? What routes/views/methods would we need to add in order to have full CRUD functionality?</p>
  </li>
</ul>

<h2 id="lecture-1">Lecture</h2>

<ul>
  <li>C: create</li>
  <li>R: read</li>
  <li>U: update</li>
  <li>D: delete</li>
</ul>

<p>So far, we are able to create a task and read a task. How do we add functionality to update and delete tasks?</p>

<p>Let’s make a chart together.</p>

<p>(Here’s a <a href="https://www.dropbox.com/s/vx3ocfsusjdrgfw/crud_in_sinatra.pdf?dl=0">completed chart</a>, but don’t open it until you’re finished!)</p>

<p><strong>Answer questions 1 &amp; 2 from the CFU</strong></p>

<h2 id="code-along">Code-Along</h2>

<h3 id="editing-a-task">Editing a task</h3>

<p>Our <strong>edit</strong> route should bring the user to a form where they can change the title and description of the task. The <strong>update</strong> route should be hit when the user submits the form and should do the work of changing the task in the database.</p>

<p>In our <code class="highlighter-rouge">index.erb</code> view:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%</span> <span class="vi">@tasks</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">task</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;h3&gt;</span>(<span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span>) <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/tasks/</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">title</span> <span class="cp">%&gt;</span><span class="nt">&lt;/a&gt;&lt;/h3&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/tasks/</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span><span class="s">/edit"</span><span class="nt">&gt;</span>Edit<span class="nt">&lt;/a&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>In our controller:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">get</span> <span class="s1">'/tasks/:id/edit'</span> <span class="k">do</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span>
    <span class="vi">@task</span> <span class="o">=</span> <span class="n">task_manager</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="nb">id</span><span class="p">.</span><span class="nf">to_i</span><span class="p">)</span>
    <span class="n">erb</span> <span class="ss">:edit</span>
  <span class="k">end</span>
</code></pre></div></div>
<p>In our view, <code class="highlighter-rouge">edit.erb</code>:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"/tasks/</span><span class="cp">&lt;%=</span> <span class="vi">@task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span><span class="s">"</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;p&gt;</span>Edit<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"_method"</span> <span class="na">value=</span><span class="s">"PUT"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">'text'</span> <span class="na">name=</span><span class="s">'task[title]'</span> <span class="na">value=</span><span class="s">"</span><span class="cp">&lt;%=</span> <span class="vi">@task</span><span class="p">.</span><span class="nf">title</span> <span class="cp">%&gt;</span><span class="s">"</span><span class="nt">/&gt;&lt;br/&gt;</span>
  <span class="nt">&lt;textarea</span> <span class="na">name=</span><span class="s">'task[description]'</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@task</span><span class="p">.</span><span class="nf">description</span> <span class="cp">%&gt;</span><span class="nt">&lt;/textarea&gt;&lt;br/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">'submit'</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="updating-a-task">Updating a task</h3>

<p>In our controller:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">set</span> <span class="ss">:method_override</span><span class="p">,</span> <span class="kp">true</span>  <span class="c1"># this allows us to use _method in the form</span>
  <span class="o">...</span>
  <span class="n">put</span> <span class="s1">'/tasks/:id'</span> <span class="k">do</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span>
    <span class="n">task_manager</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="nb">id</span><span class="p">.</span><span class="nf">to_i</span><span class="p">,</span> <span class="n">params</span><span class="p">[</span><span class="ss">:task</span><span class="p">])</span>
    <span class="n">redirect</span> <span class="s2">"/tasks/</span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2">"</span>
  <span class="k">end</span>
</code></pre></div></div>

<p>In our TaskManager model:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">task</span><span class="p">)</span>
    <span class="n">database</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
      <span class="n">target</span> <span class="o">=</span> <span class="n">database</span><span class="p">[</span><span class="s1">'tasks'</span><span class="p">].</span><span class="nf">find</span> <span class="p">{</span> <span class="o">|</span><span class="n">data</span><span class="o">|</span> <span class="n">data</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="o">==</span> <span class="nb">id</span> <span class="p">}</span>
      <span class="n">target</span><span class="p">[</span><span class="s2">"title"</span><span class="p">]</span> <span class="o">=</span> <span class="n">task</span><span class="p">[</span><span class="ss">:title</span><span class="p">]</span>
      <span class="n">target</span><span class="p">[</span><span class="s2">"description"</span><span class="p">]</span> <span class="o">=</span> <span class="n">task</span><span class="p">[</span><span class="ss">:description</span><span class="p">]</span>
    <span class="k">end</span>
  <span class="k">end</span>
</code></pre></div></div>

<p><strong>Answer questions 3 &amp; 4 from the CFU</strong></p>

<h3 id="deleting-a-task">Deleting a task</h3>

<p>In our <code class="highlighter-rouge">index.erb</code> view:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%</span> <span class="vi">@tasks</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">task</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;h3&gt;</span>(<span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span>) <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/tasks/</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">title</span> <span class="cp">%&gt;</span><span class="nt">&lt;/a&gt;&lt;/h3&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/tasks/</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span><span class="s">/edit"</span><span class="nt">&gt;</span>Edit<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"/tasks/</span><span class="cp">&lt;%=</span> <span class="n">task</span><span class="p">.</span><span class="nf">id</span> <span class="cp">%&gt;</span><span class="s">"</span> <span class="na">method=</span><span class="s">"POST"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"_method"</span> <span class="na">value=</span><span class="s">"DELETE"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"delete"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;/form&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>In our controller:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">delete</span> <span class="s1">'/tasks/:id'</span> <span class="k">do</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span>
    <span class="n">task_manager</span><span class="p">.</span><span class="nf">destroy</span><span class="p">(</span><span class="nb">id</span><span class="p">.</span><span class="nf">to_i</span><span class="p">)</span>
    <span class="n">redirect</span> <span class="s1">'/tasks'</span>
  <span class="k">end</span>
</code></pre></div></div>

<p>In our TaskManager model:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
    <span class="n">database</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
      <span class="n">database</span><span class="p">[</span><span class="s1">'tasks'</span><span class="p">].</span><span class="nf">delete_if</span> <span class="p">{</span> <span class="o">|</span><span class="n">task</span><span class="o">|</span> <span class="n">task</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="o">==</span> <span class="nb">id</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
</code></pre></div></div>

<p><strong>Answer question 5 (and any other unfinished questions) from the CFU</strong></p>

<h3 id="work-time">Work Time</h3>

<h5 id="mild-skill-inventory">Mild: Skill Inventory</h5>

<p>Fork <a href="https://github.com/turingschool-examples/skill-inventory-crud">this repository</a> and CRUD out a skill inventory. Users should be able to enter a skill (create), see a list of all of the skills, see each skill individually (read), edit a skill (update), and delete a skill (delete).</p>

<h5 id="spicy-robot-world">Spicy: Robot World</h5>

<p>Create your own Sinatra app from scratch. This app should be a directory of robots. A robot has a name, city, state, avatar, birthdate, date hired, and department. Program the CRUD functionality for robots so that we can see all robots, see one specific robot, edit/update a robot, create a robot, and delete a robot. Use <a href="http://robohash.org/">http://robohash.org/</a> for pictures. Add a dashboard that shows statistical data: average robot age, a breakdown of how many robots were hired each year, and number of robots in each department/city/state.</p>

<h5 id="extensions-for-either-project">Extensions for either project:</h5>

<ul>
  <li>Use <a href="https://github.com/stympy/faker">Faker gem</a> to get dynimac content in your app</li>
  <li>Can you use a <a href="http://www.sinatrarb.com/faq.html#partials">partial</a> in your views?</li>
  <li>Can you use <a href="http://haml.info/">HAML</a> for your html templates instead of ERB?</li>
  <li>Can you use the Pony gem to <a href="http://www.sinatrarb.com/faq.html#email">send an email</a> from your Sinatra app?</li>
  <li>Can you protect your app using <a href="http://www.sinatrarb.com/faq.html#auth">HTTP Basic Auth</a>?</li>
</ul>

<h3 id="other-resources">Other Resources:</h3>

<ul>
  <li><a href="http://tutorials.jumpstartlab.com/projects/idea_box.html">Jumpstartlab IdeaBox Tutorial</a></li>
</ul>
:ET