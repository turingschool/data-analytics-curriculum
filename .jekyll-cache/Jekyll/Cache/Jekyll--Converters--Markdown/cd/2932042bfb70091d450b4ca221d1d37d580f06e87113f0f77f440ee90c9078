I"><h3 id="learning-goals">Learning Goals</h3>

<p>By the end of this lesson, you will know/be able to:</p>

<ul>
  <li>Explain what a multi-tenant application is, and why we need one.</li>
  <li>Implement multi-tenancy at a routes level</li>
  <li>Implement multi-tenancy at the controller level.</li>
  <li>Design a database scheme for a multi-tenant application.</li>
</ul>

<h3 id="warmup">Warmup</h3>

<ul>
  <li>Write a description of the store you built for Little Shop.</li>
  <li>How is this different from a place like Etsy or eBay?</li>
  <li>What about sites that aren’t stores? What about Reddit, GitHub, or Airbnb?</li>
</ul>

<h3 id="overview">Overview</h3>

<h4 id="multi-tenancy-what-is-it-and-why-do-we-need-it">Multi-tenancy. What is it? and why do we need it?</h4>

<ul>
  <li>First there was a store.</li>
  <li>Then there was a marketplace.</li>
  <li>Examples of Multi-tenant applications - ebay, shopify, squarespace, etsy.</li>
  <li>Basically a single instance of the software is deployed vs. many instances.</li>
  <li>Single maintained large dataset that breaks down into smaller datasets for each customer/owner.</li>
</ul>

<h4 id="issuesconcerns-of-a-multi-tanant-site">Issues/Concerns of a Multi-tanant site.</h4>

<ul>
  <li>Authentication.</li>
  <li>Authorization - Scoping by role.
    <ul>
      <li>keeping one store from accessing and changing data from a different store.</li>
    </ul>
  </li>
  <li>Database design and relationships.</li>
</ul>

<h3 id="code-along">Code Along</h3>

<p>With a partner, attempt to implement the following functionality below. We will share out after each piece of functionality is implemented.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/turingschool-examples/storedom-5.git multitenancy
cd multitenancy
bundle &amp;&amp; bundle exec rake db:drop db:setup
</code></pre></div></div>

<h4 id="goals">Goals</h4>

<ul>
  <li>Persist stores to the database</li>
  <li>View stores in the app (index and show)</li>
  <li>Associate item with a store</li>
  <li>View an item with info about its store</li>
  <li>Prevent accessing items in the wrong store</li>
</ul>

<h4 id="database-updates">Database Updates</h4>

<ul>
  <li>Add <code class="highlighter-rouge">stores</code> table</li>
  <li>Add relationship between <code class="highlighter-rouge">items</code> and <code class="highlighter-rouge">stores</code></li>
</ul>

<h4 id="model-updates">Model Updates</h4>

<ul>
  <li>Add Store model</li>
  <li>Add uniqueness validations for name and slug</li>
  <li>Add relationships between Store and Item</li>
</ul>

<h4 id="route-and-controller-updates">Route and Controller Updates</h4>

<ul>
  <li>Add route to view store</li>
  <li>Add <code class="highlighter-rouge">StoresController</code></li>
  <li>Add <code class="highlighter-rouge">index</code> and <code class="highlighter-rouge">show</code> actions to <code class="highlighter-rouge">StoresController</code></li>
</ul>

<h4 id="views">Views</h4>

<ul>
  <li>Add show</li>
  <li>Add index</li>
</ul>

<h4 id="create-a-store">Create a Store</h4>

<ul>
  <li><code class="highlighter-rouge">rails c</code></li>
  <li><code class="highlighter-rouge">rails s</code></li>
</ul>

<h4 id="save-a-stores-slug">Save a Store’s Slug</h4>

<ul>
  <li>Use a callback to set the store’s slug</li>
</ul>

<p>I don’t completely expect that you will have memorized how to create a callback at this point. See if you can find resources online that will allow you to implement this functionality.</p>

<h4 id="update-controller">Update Controller</h4>

<ul>
  <li>Change the controller to find a store using its slug</li>
</ul>

<h4 id="add-items">Add Items</h4>

<ul>
  <li>How would we refactor if we wanted a view to show items only for a particular store?</li>
  <li>What would the route look like?</li>
  <li>What if we wanted to keep our view for all items, but also have a view for only items associated with a store?</li>
</ul>

<h4 id="change-route">Change Route</h4>

<ul>
  <li>What if we wanted to have the same functionality, but delete the <code class="highlighter-rouge">/stores</code> part of our route?</li>
</ul>

<p>Similar to the callbacks section, see if you can find any resources online that will allow you to implement this before looking below.</p>

<h4 id="revised-routes">Revised Routes</h4>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">namespace</span> <span class="ss">:store</span><span class="p">,</span> <span class="ss">path: </span><span class="s1">':store'</span><span class="p">,</span> <span class="ss">as: :store</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:items</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:show</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Stores::ItemsController</span>
<span class="k">def</span> <span class="nf">index</span>
  <span class="vi">@store</span> <span class="o">=</span> <span class="no">Store</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:store</span><span class="p">])</span>
  <span class="vi">@items</span> <span class="o">=</span> <span class="vi">@store</span><span class="p">.</span><span class="nf">items</span>
<span class="k">end</span>
</code></pre></div></div>

<h4 id="takeaways">Takeaways</h4>

<ul>
  <li>Multitenancy will generally lead to new relationships between resources</li>
  <li>Nested routes can help us work with related resources</li>
</ul>

<h3 id="video">Video</h3>

<ul>
  <li><a href="https://vimeo.com/142297870">Understanding Multi-Tenancy - Oct. 2015</a></li>
  <li><a href="https://vimeo.com/128198524">Understanding Multi-Tenancy - May. 2015</a></li>
</ul>

<h3 id="repository">Repository</h3>

<ul>
  <li><a href="https://github.com/turingschool-examples/storedom">Repo for the lesson</a></li>
</ul>

<h3 id="resources">Resources</h3>

<ul>
  <li><a href="https://quickleft.com/blog/what-is-a-multi-tenant-application/">QuickLeft blog post/ discussion on Multi-tenancy</a>
*</li>
</ul>
:ET