I"ı1<h1 id="iteration-0---merchants--items">Iteration 0 - Merchants &amp; Items</h1>

<p>The goal of this iteration is to get the ball rolling by focusing on a ‚ÄúData Access Layer‚Äù for multiple CSV files.</p>

<h2 id="data-access-layer">Data Access Layer</h2>

<p>The idea of a <em>DAL</em> is to write classes which load and parse your raw data, allowing your system to then interact with rich ruby objects to do more complex analysis. In this iteration we‚Äôll build the beginnings of a DAL by building the classes described below:</p>

<h3 id="salesengine"><code class="highlighter-rouge">SalesEngine</code></h3>

<p>Then let‚Äôs tie everything together with one common root, a <code class="highlighter-rouge">SalesEngine</code> instance:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">se</span> <span class="o">=</span> <span class="no">SalesEngine</span><span class="p">.</span><span class="nf">from_csv</span><span class="p">({</span>
  <span class="ss">:items</span>     <span class="o">=&gt;</span> <span class="s2">"./data/items.csv"</span><span class="p">,</span>
  <span class="ss">:merchants</span> <span class="o">=&gt;</span> <span class="s2">"./data/merchants.csv"</span><span class="p">,</span>
<span class="p">})</span>
</code></pre></div></div>

<p>From there we can find the child instances:</p>

<ul>
  <li><code class="highlighter-rouge">items</code> returns an instance of <code class="highlighter-rouge">ItemRepository</code> with all the item instances loaded</li>
  <li><code class="highlighter-rouge">merchants</code> returns an instance of <code class="highlighter-rouge">MerchantRepository</code> with all the merchant instances loaded</li>
</ul>

<h3 id="merchantrepository"><code class="highlighter-rouge">MerchantRepository</code></h3>

<p>The <code class="highlighter-rouge">MerchantRepository</code> is responsible for holding and searching our <code class="highlighter-rouge">Merchant</code>
instances. It offers the following methods:</p>

<ul>
  <li><code class="highlighter-rouge">all</code> - returns an array of all known <code class="highlighter-rouge">Merchant</code> instances</li>
  <li><code class="highlighter-rouge">find_by_id(id)</code> - returns either <code class="highlighter-rouge">nil</code> or an instance of <code class="highlighter-rouge">Merchant</code> with a matching ID</li>
  <li><code class="highlighter-rouge">find_by_name(name)</code> - returns either <code class="highlighter-rouge">nil</code> or an instance of <code class="highlighter-rouge">Merchant</code> having done a <em>case insensitive</em> search</li>
  <li><code class="highlighter-rouge">find_all_by_name(name)</code> - returns either <code class="highlighter-rouge">[]</code> or one or more matches which contain the supplied name fragment, <em>case insensitive</em></li>
  <li><code class="highlighter-rouge">create(attributes)</code> - create a new <code class="highlighter-rouge">Merchant</code> instance with the provided <code class="highlighter-rouge">attributes</code>. The new <code class="highlighter-rouge">Merchant</code>‚Äôs id should be the current highest <code class="highlighter-rouge">Merchant</code> id plus 1.</li>
  <li><code class="highlighter-rouge">update(id, attributes)</code> - update the <code class="highlighter-rouge">Merchant</code> instance with the corresponding <code class="highlighter-rouge">id</code> with the provided <code class="highlighter-rouge">attributes</code>. Only the merchant‚Äôs <code class="highlighter-rouge">name</code> attribute can be updated.</li>
  <li><code class="highlighter-rouge">delete(id)</code> - delete the <code class="highlighter-rouge">Merchant</code> instance with the corresponding <code class="highlighter-rouge">id</code></li>
</ul>

<p>The data can be found in <code class="highlighter-rouge">data/merchants.csv</code> so the instance is created and used like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">se</span> <span class="o">=</span> <span class="no">SalesEngine</span><span class="p">.</span><span class="nf">from_csv</span><span class="p">({</span>
  <span class="ss">:items</span>     <span class="o">=&gt;</span> <span class="s2">"./data/items.csv"</span><span class="p">,</span>
  <span class="ss">:merchants</span> <span class="o">=&gt;</span> <span class="s2">"./data/merchants.csv"</span><span class="p">,</span>
<span class="p">})</span>

<span class="n">mr</span> <span class="o">=</span> <span class="n">se</span><span class="p">.</span><span class="nf">merchants</span>
<span class="n">merchant</span> <span class="o">=</span> <span class="n">mr</span><span class="p">.</span><span class="nf">find_by_name</span><span class="p">(</span><span class="s2">"CJsDecor"</span><span class="p">)</span>
<span class="c1"># =&gt; &lt;Merchant&gt;</span>
</code></pre></div></div>

<h3 id="merchant"><code class="highlighter-rouge">Merchant</code></h3>

<p>The merchant is one of the critical concepts in our data hierarchy.</p>

<ul>
  <li><code class="highlighter-rouge">id</code> - returns the integer id of the merchant</li>
  <li><code class="highlighter-rouge">name</code> - returns the name of the merchant</li>
</ul>

<p>We create an instance like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">m</span> <span class="o">=</span> <span class="no">Merchant</span><span class="p">.</span><span class="nf">new</span><span class="p">({</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s2">"Turing School"</span><span class="p">})</span>
</code></pre></div></div>

<h3 id="itemrepository"><code class="highlighter-rouge">ItemRepository</code></h3>

<p>The <code class="highlighter-rouge">ItemRepository</code> is responsible for holding and searching our <code class="highlighter-rouge">Item</code>
instances. This object represents one line of data from the file <code class="highlighter-rouge">items.csv</code>.</p>

<p>It offers the following methods:</p>

<ul>
  <li><code class="highlighter-rouge">all</code> - returns an array of all known <code class="highlighter-rouge">Item</code> instances</li>
  <li><code class="highlighter-rouge">find_by_id(id)</code> - returns either <code class="highlighter-rouge">nil</code> or an instance of <code class="highlighter-rouge">Item</code> with a matching ID</li>
  <li><code class="highlighter-rouge">find_by_name(name)</code> - returns either <code class="highlighter-rouge">nil</code> or an instance of <code class="highlighter-rouge">Item</code> having done a <em>case insensitive</em> search</li>
  <li><code class="highlighter-rouge">find_all_with_description(description)</code> - returns either <code class="highlighter-rouge">[]</code> or instances of <code class="highlighter-rouge">Item</code> where the supplied string appears in the item description (case insensitive)</li>
  <li><code class="highlighter-rouge">find_all_by_price(price)</code> - returns either <code class="highlighter-rouge">[]</code> or instances of <code class="highlighter-rouge">Item</code> where the supplied price exactly matches</li>
  <li><code class="highlighter-rouge">find_all_by_price_in_range(range)</code> - returns either <code class="highlighter-rouge">[]</code> or instances of <code class="highlighter-rouge">Item</code> where the supplied price is in the supplied range (a single Ruby <code class="highlighter-rouge">range</code> instance is passed in)</li>
  <li><code class="highlighter-rouge">find_all_by_merchant_id(merchant_id)</code> - returns either <code class="highlighter-rouge">[]</code> or instances of <code class="highlighter-rouge">Item</code> where the supplied merchant ID matches that supplied</li>
  <li><code class="highlighter-rouge">create(attributes)</code> - create a new <code class="highlighter-rouge">Item</code> instance with the provided <code class="highlighter-rouge">attributes</code>. The new <code class="highlighter-rouge">Item</code>‚Äôs id should be the current highest <code class="highlighter-rouge">Item</code> id plus 1.</li>
  <li><code class="highlighter-rouge">update(id, attributes)</code> - update the <code class="highlighter-rouge">Item</code> instance with the corresponding <code class="highlighter-rouge">id</code> with the provided <code class="highlighter-rouge">attributes</code>. Only the item‚Äôs <code class="highlighter-rouge">name</code>, <code class="highlighter-rouge">desription</code>, and <code class="highlighter-rouge">unit_price</code> attributes can be updated. This method will also change the items <code class="highlighter-rouge">updated_at</code> attribute to the current time.</li>
  <li><code class="highlighter-rouge">delete(id)</code> - delete the <code class="highlighter-rouge">Item</code> instance with the corresponding <code class="highlighter-rouge">id</code></li>
</ul>

<p>It‚Äôs initialized and used like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">se</span> <span class="o">=</span> <span class="no">SalesEngine</span><span class="p">.</span><span class="nf">from_csv</span><span class="p">({</span>
  <span class="ss">:items</span>     <span class="o">=&gt;</span> <span class="s2">"./data/items.csv"</span><span class="p">,</span>
  <span class="ss">:merchants</span> <span class="o">=&gt;</span> <span class="s2">"./data/merchants.csv"</span>
<span class="p">})</span>

<span class="n">ir</span>   <span class="o">=</span> <span class="n">se</span><span class="p">.</span><span class="nf">items</span>
<span class="n">item</span> <span class="o">=</span> <span class="n">ir</span><span class="p">.</span><span class="nf">find_by_name</span><span class="p">(</span><span class="s2">"Item Repellat Dolorum"</span><span class="p">)</span>
<span class="c1"># =&gt; &lt;Item&gt;</span>
</code></pre></div></div>

<h3 id="item"><code class="highlighter-rouge">Item</code></h3>

<p>The Item instance offers the following methods:</p>

<ul>
  <li><code class="highlighter-rouge">id</code> - returns the integer id of the item</li>
  <li><code class="highlighter-rouge">name</code> - returns the name of the item</li>
  <li><code class="highlighter-rouge">description</code> - returns the description of the item</li>
  <li><code class="highlighter-rouge">unit_price</code> - returns the price of the item formatted as a <code class="highlighter-rouge">BigDecimal</code></li>
  <li><code class="highlighter-rouge">created_at</code> - returns a <code class="highlighter-rouge">Time</code> instance for the date the item was first created</li>
  <li><code class="highlighter-rouge">updated_at</code> - returns a <code class="highlighter-rouge">Time</code> instance for the date the item was last modified</li>
  <li><code class="highlighter-rouge">merchant_id</code> - returns the integer merchant id of the item</li>
</ul>

<p>It also offers the following method:</p>

<ul>
  <li><code class="highlighter-rouge">unit_price_to_dollars</code> - returns the price of the item in dollars formatted as a <code class="highlighter-rouge">Float</code></li>
</ul>

<p>We create an instance like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span> <span class="o">=</span> <span class="no">Item</span><span class="p">.</span><span class="nf">new</span><span class="p">({</span>
  <span class="ss">:id</span>          <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
  <span class="ss">:name</span>        <span class="o">=&gt;</span> <span class="s2">"Pencil"</span><span class="p">,</span>
  <span class="ss">:description</span> <span class="o">=&gt;</span> <span class="s2">"You can use it to write things"</span><span class="p">,</span>
  <span class="ss">:unit_price</span>  <span class="o">=&gt;</span> <span class="no">BigDecimal</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="mf">10.99</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span>
  <span class="ss">:created_at</span>  <span class="o">=&gt;</span> <span class="no">Time</span><span class="p">.</span><span class="nf">now</span><span class="p">,</span>
  <span class="ss">:updated_at</span>  <span class="o">=&gt;</span> <span class="no">Time</span><span class="p">.</span><span class="nf">now</span><span class="p">,</span>
  <span class="ss">:merchant_id</span> <span class="o">=&gt;</span> <span class="mi">2</span>
<span class="p">})</span>
</code></pre></div></div>
:ET