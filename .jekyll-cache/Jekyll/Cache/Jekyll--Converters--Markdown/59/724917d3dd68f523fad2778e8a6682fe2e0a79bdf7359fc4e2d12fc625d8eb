I"ΩY<h2 id="introduction">Introduction</h2>

<p>Pearson‚Äôs Law:</p>

<blockquote>
  <p>‚ÄúThat which is measured improves. That which is measured and reported improves exponentially.‚Äù - Karl Pearson</p>
</blockquote>

<p>Technology has enabled us to measure more, and shorten the period between measurement and reporting. Sensors are cheaper and smaller, computers are everywhere, and we can access data from anywhere. People who have recognized this, and applied it to themselves are part of a movement called ‚ÄúQuantified Self.‚Äù</p>

<p>You are going to build a simple calorie tracker.</p>

<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Create an Express API given specified endpoints and response formats.</li>
  <li>Create a front-end to consume the Express API built for QS.</li>
</ul>

<h3 id="requirements-overview">Requirements Overview</h3>

<p>You will be creating a front-end to consume your fully-tested Express API that users will utilize to track calories in meals that they eat. You can use <a href="https://github.com/turingschool-examples/qs-fe-starter-kit">this</a> as a starter kit.</p>

<ul>
  <li>Your front end should be deployed with <a href="https://pages.github.com/">GitHub Pages</a> or <a href="https://surge.sh/">Surge</a>.</li>
  <li>Your back end should be deployed with Heroku.</li>
</ul>

<h3 id="front-end-features">Front End Features</h3>

<p>Your front end application that consumes your API will have three main layouts. A ‚Äúfoods‚Äù index page and a ‚Äúdiary‚Äù index page (as seen below), and either a ‚Äúrecipes‚Äù or ‚Äúcalendar‚Äù (or history) page.</p>

<h4 id="manage-foods"><strong>Manage Foods</strong></h4>

<p><img src="quantified-self-resource-management.png" alt="quantifed-self-resource-management.png" /></p>

<h4 id="main-diary"><strong>Main Diary</strong></h4>

<p><img src="quantified-self-diary.png" alt="quantified-self-diary.png" /></p>

<p>At a high level, users will be able to:</p>

<ul>
  <li>CRUD foods</li>
  <li>Add a food to a meal</li>
  <li>Compare calories to goals (meal and total)</li>
  <li>View calorie calculations in diary</li>
  <li>Data persists across refreshes</li>
  <li>Consume the same endpoints that you built in Rails (but from your Express server), in addition to either the Calendar or Recipe option, explained below.</li>
</ul>

<p><strong>A couple of things to note:</strong></p>
<ul>
  <li>The above images are NOT wireframes you should follow - they are as simple as possible to illustrate the info/functionality your app should have. Your need to develop wireframes and decide on a UI flow.</li>
  <li>User should NEVER have to ‚Äòrefresh‚Äô the page to get updated data, and user should NEVER have to type something into the URL bar once they are on your page.</li>
  <li>While you are developing the front-end before you have your Express server deployed, feel free to use <code class="highlighter-rouge">https://fast-meadow-36413.herokuapp.com/</code> as your base URL for requests.</li>
</ul>

<h3 id="required-extension---pick-one-option">Required extension - Pick one option!</h3>

<h3 id="option-1---calendar">Option 1 - Calendar</h3>

<p>What‚Äôs the point of this app if one can‚Äôt look back in time and see what eating habits they have? If you select this option, you need to build out another page on the front-end that lists all dates the user has recorded meals, and what they ate for each meal.</p>

<h3 id="option-2---recipes">Option 2 - Recipes</h3>

<p>Instead of ‚ÄúFoods‚Äù, you may want to call it ‚ÄúPantry‚Äù‚Ä¶ going down the recipes route means you need to allow your user to select one or more foods from the ‚Äúmanage foods‚Äù page, then be shown recipes that can be made with the selected food(s). The recipes should probably be shown on another page for a smooth UI, and should be pulled from the Yummly API.</p>

<h3 id="back-end-features">Back End Features</h3>

<p>For your Express back end:</p>

<ul>
  <li>You‚Äôll start the repository from scratch.</li>
  <li>Create an agile board and write stories for each of your endpoints. Choose between Github Projects, Waffle, Trello, or Pivotal Tracker.</li>
  <li>Add your assigned Technical Lead to your agile board and your repository.</li>
</ul>

<p>You will need to build the following foods and meals endpoints for your application (listed below). Based on the option you choose (calendar or recipes) you may need to modify the endpoints listed in project spec - do so as needed. You will definitely need to add some.</p>

<p>There may be different architectural decisions you make with your server because of this addition; take you time to plan this out thoughtfully.</p>

<h4 id="food-endpoints">Food Endpoints:</h4>

<p><strong>GET /api/v1/foods</strong></p>

<p>Returns all foods currently in the database</p>

<p>Each individual food will be returned in the following format:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Banana</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">150</span>
<span class="p">},</span>
</code></pre></div></div>

<p><strong>GET /api/v1/foods/:id</strong></p>

<p>Returns the food object with the specific <code class="highlighter-rouge">:id</code> you‚Äôve passed in or 404 if the food is not found</p>

<p><strong>POST /api/v1/foods</strong></p>

<p>Allows creating a new food with the parameters:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span> <span class="dl">"</span><span class="s2">food</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span> <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Name of food here</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Calories here</span><span class="dl">"</span><span class="p">}</span> <span class="p">}</span>
</code></pre></div></div>

<p>If food is successfully created, the food item will be returned. If the food is not successfully created, a 400 status code will be returned. Both name and calories are required fields.</p>

<p><strong>PATCH /api/v1/foods/:id</strong></p>

<p>Allows one to update an existing food with the parameters:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span> <span class="dl">"</span><span class="s2">food</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span> <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Mint</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">14</span><span class="dl">"</span><span class="p">}</span> <span class="p">}</span>
</code></pre></div></div>

<p>If food is successfully updated (name and calories are required fields), the food item will be returned. If the food is not successfully updated, a 400 status code will be returned.</p>

<p><strong>DELETE /api/v1/foods/:id</strong></p>

<p>Will delete the food with the id passed in and return a 204 status code. If the food can‚Äôt be found, a 404 will be returned.</p>

<h4 id="meal-endpoints">Meal Endpoints:</h4>

<p><strong>GET /api/v1/meals</strong></p>

<p>Returns all the meals in the database along with their associated foods</p>

<p>If successful, this request will return a response in the following format:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span>
    <span class="p">{</span>
        <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Breakfast</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">foods</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Banana</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">150</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Yogurt</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">550</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Apple</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">220</span>
            <span class="p">}</span>
        <span class="p">]</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Snack</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">foods</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Banana</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">150</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Gum</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">50</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Cheese</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">400</span>
            <span class="p">}</span>
        <span class="p">]</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Lunch</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">foods</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Bagel Bites - Four Cheese</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">650</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Chicken Burrito</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">800</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Apple</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">220</span>
            <span class="p">}</span>
        <span class="p">]</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Dinner</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">foods</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Banana</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">150</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Bagel Bites - Four Cheese</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">650</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Chicken Burrito</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">800</span>
            <span class="p">}</span>
        <span class="p">]</span>
    <span class="p">}</span>
<span class="p">]</span>
</code></pre></div></div>

<p><strong>GET /api/v1/meals/:meal_id/foods</strong></p>

<p>Returns all the foods associated with the meal with an id specified by :meal_id or a 404 if the meal is not found</p>

<p>If successful, this request will return a response in the following format:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Breakfast</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">foods</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span>
            <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Banana</span><span class="dl">"</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">150</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Yogurt</span><span class="dl">"</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">550</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Apple</span><span class="dl">"</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">calories</span><span class="dl">"</span><span class="p">:</span> <span class="mi">220</span>
        <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>POST /api/v1/meals/:meal_id/foods/:id</strong></p>

<p>Adds the food with :id to the meal with :meal_id</p>

<p>This creates a new record in the MealFoods table to establish the relationship between this food and meal. If the meal/food cannot be found, a 404 will be returned.</p>

<p>If successful, this request will return a status code of 201 with the following body:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">message</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Successfully added FOODNAME to MEALNAME</span><span class="dl">"</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>DELETE /api/v1/meals/:meal_id/foods/:id</strong></p>

<p>Removes the food with :id from the meal with :meal_id</p>

<p>This deletes the existing record in the MealFoods table that creates the relationship between this food and meal. If the meal/food cannot be found, a 404 will be returned.</p>

<p>If successful, this request will return:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">message</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Successfully removed FOODNAME to MEALNAME</span><span class="dl">"</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="expectations">Expectations</h3>

<ul>
  <li>Tag instructors in PRs on Github wherever you‚Äôd like feedback.</li>
  <li>Reach out for extra support if you feel like your team is falling behind.</li>
  <li>If there‚Äôs any question about functionality, ASK.</li>
</ul>

<h2 id="rubric">Rubric</h2>

<p>You will be graded by an instructor on the criteria in <a href="./rubric">this rubric</a>.</p>
:ET