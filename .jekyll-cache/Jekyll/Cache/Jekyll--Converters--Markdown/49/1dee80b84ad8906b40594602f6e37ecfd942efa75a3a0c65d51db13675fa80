I"<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Understand how cookies are a part of the request/response cycle</li>
  <li>Understand how cookies and sessions tie together</li>
  <li>Understand that cookies involve serialization via JSON</li>
  <li>Practice the syntax for setting and fetching session data</li>
  <li>Discuss creating a PORO to wrap a hash</li>
  <li>Understand how to tie a session reference to a database object</li>
</ul>

<h2 id="structure">Structure</h2>

<ul>
  <li>5 - Warmup</li>
  <li>20 - Full-Group Instruction</li>
  <li>5 - Break</li>
  <li>10 - Full-Group Instruction (continued)</li>
  <li>15 - Multi-Request Experiments</li>
  <li>5 - Break</li>
  <li>15 - Multi-Request Experiments (continued)</li>
  <li>10 - Independent Work</li>
  <li>5 - Break</li>
  <li>20 - Independent Work (continued)</li>
  <li>5 - Wrapup</li>
</ul>

<h2 id="warmup">Warmup</h2>

<ul>
  <li>Start a Gist</li>
  <li>Set the title to “Storing State in Sessions” and the file type to Markdown</li>
  <li>Paste in the following questions:</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. What's the difference between a cookie and a session?
2. What's serialization and how does it come into play with cookies?
3. Can a cookie be shared by more than one user? How/why?
4. What would it mean to store a shopping cart in a cookie?
5. What advantages/disadvantages are there between cookie-stored carts and
database-stored carts?
</code></pre></div></div>

<ul>
  <li>Save it as a public Gist</li>
  <li>Edit the Gist (thus creating a second version)</li>
  <li>Answer the questions to the best of your knowledge</li>
  <li>Save it</li>
</ul>

<h2 id="full-group-instruction">Full-Group Instruction</h2>

<p>Our full-group session will be a mix of whiteboard discussion and live code
experiments. We’ll use the
<a href="https://github.com/turingschool-examples/storedom">Storedom Sample App</a>
as a basis for experimenting.</p>

<ul>
  <li>Recapping Request/Response and Cookies</li>
  <li>How a cookie ties to a session</li>
  <li>Cookies are strings</li>
  <li>Serialization via JSON</li>
  <li>Setting and fetching a value</li>
</ul>

<h2 id="multi-request-experiments">Multi-Request Experiments</h2>

<p>The second full-group session will involve more input from the class and use
Storedom as the base to:</p>

<ul>
  <li>Create a simple hash-based cart</li>
  <li>Store the cart in the cookie</li>
  <li>Interact with the cart across requests</li>
  <li>Create a PORO model to wrap the cookie-based cart</li>
  <li>Discuss the plusses and minuses of this approach</li>
</ul>

<p>Then, as a second approach:</p>

<ul>
  <li>Create a database-backed cart model</li>
  <li>Store a reference in the cookie</li>
  <li>Use a <code class="highlighter-rouge">before_filter</code> to lookup the cart as a request comes in</li>
  <li>Discuss the plusses and minuses of this approach</li>
</ul>

<h2 id="independent-work">Independent Work</h2>

<p>You can really use any Rails application for experimenting with sessions,
but a good choice would be to clone and try our
<a href="https://github.com/turingschool-examples/storedom">Storedom Sample App</a>.</p>

<h3 id="basic">Basic</h3>

<p>If you’d like to review the core concepts discussed during the Full-Group
instruction, read through and experiment with the
<a href="http://tutorials.jumpstartlab.com/topics/controllers/sessions_and_conversations.html">Sessions &amp; Conversations Tutorial</a>
up to the heading “Storage Options”.</p>

<h3 id="intermediate">Intermediate</h3>

<p>Experiment with implementing the ActiveRecord Session Store by referencing:</p>

<ul>
  <li><a href="https://github.com/turingschool-examples/storedom">The project’s README</a></li>
  <li>Our <a href="http://tutorials.jumpstartlab.com/topics/controllers/sessions_and_conversations.html">Sessions &amp; Conversations Tutorial</a>
starting at “Database Storage with ActiveRecordStore”</li>
</ul>

<h3 id="challenging">Challenging</h3>

<p>Read <a href="http://dev.housetrip.com/2014/01/14/session-store-and-security/">this blog post about “Session Store &amp; Security”</a>
and experiment with cookie tampering and decoding.</p>

<h2 id="wrapup">Wrapup</h2>

<p>Spend the last five minutes returning to your Gist from the Warmup, edit
to create a third version, and update your answers.</p>

<h2 id="corrections--improvements-for-next-time">Corrections &amp; Improvements for Next Time</h2>

<ul>
  <li>I ended up using the example of a “hit counter” to demonstrate how data is
persisted across requests, including how data dies when the cookie is deleted</li>
  <li>I drew a diagram here: http://cl.ly/image/2V2c3o1H0d1w</li>
  <li>The “Basic” tutorial could explain things a little more step-by-step about how to add something meaningful to the cart</li>
</ul>
:ET