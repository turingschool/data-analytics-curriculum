I"–<h2 id="gringotts-wizarding-bank">Gringottâ€™s Wizarding Bank</h2>

<p>Gringottâ€™s has become too big to fail, so the Ministry of Magic has decided to break up this wizarding bank.</p>

<p>But they need, quite literally, a programming wizard to create the software to run these banks.</p>

<h2 id="specification">Specification</h2>

<h3 id="level-1">Level 1</h3>

<p>Using classes, meet the following requirements:</p>

<p>(Note: Assume the default unit of currency is the galleon.)</p>

<ul>
  <li>Create a Person class to model a person. This person should have a name and a level of cash.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>person1 = Person.new("Minerva", 1000)

Minerva has been created with 1000 galleons in cash.

person2 = Person.new("Luna", 500)

Luna has been created with 500 galleons in cash.
</code></pre></div></div>

<ul>
  <li>The person class should store a personâ€™s cash level, which banks they have an account with, and their balances at each bank.</li>
  <li>Create a Bank class to create Banks with. Each bank should have a unique name.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase = Bank.new("JP Morgan Chase")

JP Morgan Chase has been created.

wells_fargo = Bank.new("Wells Fargo")

Wells Fargo has been created.
</code></pre></div></div>

<ul>
  <li>The bank class should have a method that allows the creation of an account that is attached to a person, by passing it a person.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.open_account(person1)

An account has been opened for Minerva with JP Morgan Chase.

</code></pre></div></div>
<ul>
  <li>Banks should be able to accept deposits by passing in a person and deposit amount to the deposit method.</li>
  <li>When accepting a deposit, the personâ€™s cash level should decrease by the deposit amount, and the bank account balance should increase by that amount.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.deposit(person1, 750)

750 galleons have been deposited into Minerva's Chase account. Balance: 750 Cash: 250
</code></pre></div></div>

<ul>
  <li>A person should not be able to deposit more than their current level of cash.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.deposit(person1, 5000)

Minerva does not have enough cash to perform this deposit.

</code></pre></div></div>

<ul>
  <li>Banks should be able to do withdrawals by passing in a person and withdrawal amount to the withdrawal method.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.withdrawal(person1, 250)

Minerva has withdrawn 250 galleons. Balance: 250
</code></pre></div></div>
<ul>
  <li>A person should not be able to withdraw more than they have in a bank. (No overdrafting.)</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.withdrawal(person1, 25000)

Insufficient funds.
</code></pre></div></div>

<ul>
  <li>A bank should be able to transfer money to another bank. <code class="highlighter-rouge">chase.transfer(person1, wells_fargo, 250)</code></li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.transfer(person1, wells_fargo, 250)

Minerva has transferred 250 galleons from JP Morgan Chase to Wells Fargo.
</code></pre></div></div>

<ul>
  <li>Again, a person should not be able to transfer more money than their balance.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.transfer(person1, wells_fargo, 25000)

Insufficient funds.
</code></pre></div></div>

<ul>
  <li>A person should not be able to transfer money to or from a bank they do not have an account with.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.transfer(person1, wells_fargo, 250)

Luna does not have an account with Wells Fargo.
</code></pre></div></div>

<ul>
  <li>There should be a method that tells us the current total cash in the bank.</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chase.total_cash

Total Cash: 750 galleons
</code></pre></div></div>

<h3 id="level-2">Level 2</h3>

<p>In this new financial climate, there are now companies offering wizards and witches lines of credit.</p>

<ul>
  <li>There should be a Credit class, and each Credit should have a unique name. <code class="highlighter-rouge">amex = Credit.new("AMEX")</code></li>
  <li>When you open a line of credit, you pass it a person, a credit limit and an interest rate. <code class="highlighter-rouge">amex.open_credit(person1, 100, 0.05)</code></li>
  <li>A person should be able to spend against your credit limit. <code class="highlighter-rouge">amex.cc_spend(person1, 50)</code></li>
  <li>A person should not be able to spend more than their credit limit.</li>
  <li>A person should be able to pay down their credit balance.</li>
  <li>A person should not be able to pay down their credit balance with more than their cash on hand.</li>
</ul>

<h3 id="extensions">Extensions</h3>
<ul>
  <li>Use TDD to complete this</li>
  <li>Modify your program to handle the different denominations of currency. For your reference: there are 17 silver Sickles
to a gold Galleon, and 29 bronze Knuts to a Sickle.</li>
</ul>
:ET