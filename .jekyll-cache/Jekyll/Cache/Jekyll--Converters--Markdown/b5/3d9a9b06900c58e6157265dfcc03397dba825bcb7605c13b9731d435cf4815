I"5<h2 id="learning-goals">Learning Goals</h2>

<ul>
  <li>Learn how HTTP Basic Auth works in Sinatra applications</li>
  <li>Experiment with implementing HTTP Basic Auth</li>
</ul>

<h2 id="structure">Structure</h2>

<ul>
  <li>5 - Warmup Demo</li>
  <li>20 - How HTTP Basic Auth Works</li>
  <li>Break</li>
  <li>25 - Independent Work</li>
  <li>5 - Wrapup / Questions</li>
</ul>

<h2 id="warmup-demo">Warmup Demo</h2>

<p>First up, let’s see what HTTP Basic Auth will do for us when it’s fully implemented.</p>

<h2 id="full-group-instruction">Full-Group Instruction</h2>

<ul>
  <li>Starting with http://github.com/turingschool-examples/sinatra_cms</li>
  <li>Fire up a console with <code class="highlighter-rouge">rake console</code></li>
  <li>See there are pages with <code class="highlighter-rouge">Page.all</code></li>
  <li>Start the server with <code class="highlighter-rouge">rackup</code></li>
  <li>Visit <code class="highlighter-rouge">http://localhost:9292/pages/sample_1</code> and it displays</li>
</ul>

<h3 id="protect-all-pages">Protect All Pages</h3>

<ul>
  <li><code class="highlighter-rouge">Rack::Auth::Basic</code> is a “middleware”</li>
  <li>Activate it with <code class="highlighter-rouge">use</code></li>
  <li>If the block returns true, then the request is processed</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">use</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Auth</span><span class="o">::</span><span class="no">Basic</span><span class="p">,</span> <span class="s2">"Secret Area"</span> <span class="k">do</span> <span class="o">|</span><span class="n">username</span><span class="p">,</span> <span class="n">password</span><span class="o">|</span>
  <span class="n">username</span> <span class="o">==</span> <span class="s1">'admin'</span> <span class="o">&amp;&amp;</span> <span class="n">password</span> <span class="o">==</span> <span class="s1">'secret'</span>
<span class="k">end</span>
</code></pre></div></div>

<ul>
  <li>See the results in the browser</li>
</ul>

<h3 id="protect-a-single-page">Protect a Single Page</h3>

<ul>
  <li>Define a <code class="highlighter-rouge">protected!</code> method that’ll be used to specify that a certain
page should be password protected</li>
  <li>Use them to protect only the <code class="highlighter-rouge">sample_2</code> page</li>
</ul>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">protected!</span>
  <span class="k">return</span> <span class="k">if</span> <span class="n">authorized?</span>
  <span class="n">headers</span><span class="p">[</span><span class="s1">'WWW-Authenticate'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'Basic realm="Restricted Area"'</span>
  <span class="n">halt</span> <span class="mi">401</span><span class="p">,</span> <span class="s2">"Not authorized</span><span class="se">\n</span><span class="s2">"</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">authorized?</span>
  <span class="vi">@auth</span> <span class="o">||=</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Auth</span><span class="o">::</span><span class="no">Basic</span><span class="o">::</span><span class="no">Request</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">request</span><span class="p">.</span><span class="nf">env</span><span class="p">)</span>
  <span class="vi">@auth</span><span class="p">.</span><span class="nf">provided?</span> <span class="o">&amp;&amp;</span> <span class="vi">@auth</span><span class="p">.</span><span class="nf">basic?</span> <span class="o">&amp;&amp;</span>
  <span class="vi">@auth</span><span class="p">.</span><span class="nf">credentials</span> <span class="o">&amp;&amp;</span> <span class="vi">@auth</span><span class="p">.</span><span class="nf">credentials</span> <span class="o">==</span> <span class="p">[</span><span class="s1">'admin'</span><span class="p">,</span> <span class="s1">'admin'</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<h2 id="independent-challenge">Independent Challenge</h2>

<p>Write some tests and reverse the above example:</p>

<ul>
  <li>Write a test which verifies that the <code class="highlighter-rouge">sample_2</code> page is reachable without login</li>
  <li>Write a test which verifies that the <code class="highlighter-rouge">sample_1</code> page is not reachable with no
username/password</li>
  <li>Write a test which verifies that the <code class="highlighter-rouge">sample_1</code> page is not reachable with the
wrong username/password</li>
  <li>Write a test which verifies that the <code class="highlighter-rouge">sample_1</code> page is reachable with
the correct login</li>
</ul>

<p>To get things working, reference the notes above as well as the
<a href="http://www.sinatrarb.com/faq.html#test_http_auth">Sinatra FAQ</a>.</p>

<h2 id="wrap-up">Wrap-Up</h2>

<ul>
  <li>Your questions</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="http://www.sinatrarb.com/faq.html#auth">Sinatra FAQ About Auth</a></li>
  <li><a href="http://recipes.sinatrarb.com/p/middleware/rack_auth_basic_and_digest">Sinatra Recipes with Auth Basic</a></li>
</ul>
:ET